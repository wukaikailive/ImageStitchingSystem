<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Charts.XamTreemap.v15.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer">
            <summary>
            The automation peer for the treemap node
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.#ctor(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.TreemapNodeAutomationPeer.Node">
            <summary>
            Gets or sets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer">
            <summary>
            The automation peer for the treemap
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.#ctor(Infragistics.Controls.Charts.XamTreemap)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer"/> class.
            </summary>
            <param name="treemap">The treemap.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.GetSupportedViews">
            <summary>
            Retrieves a collection of control-specific view identifiers.
            </summary>
            <returns>
            A collection of values that identifies the views available for a UI automation element.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.GetViewName(System.Int32)">
            <summary>
            Retrieves the name of a control-specific view.
            </summary>
            <param name="viewId">The view identifier.</param>
            <returns>A localized name for the view.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.SetCurrentView(System.Int32)">
            <summary>
            Sets the current control-specific view.
            </summary>
            <param name="viewId">A view identifier.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.Treemap">
            <summary>
            Gets or sets the treemap.
            </summary>
            <value>The treemap.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.AutomationPeers.XamTreemapAutomationPeer.CurrentView">
            <summary>
            Gets the current control-specific view.
            </summary>
            <value></value>
            <returns>The value (<paramref name="viewId"/>) for the current view of the UI automation element. </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.NodeBinder">
            <summary>
            This class bindes the value, text and items source properties of a treemap item to the provided data.
            Paths should be provided which are the names of the properties of the data.
            The data sould be of TargetTypeName type. NodeStyle is applied as a style of the bound node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.NodeBinder"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.TargetTypeNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.TargetTypeName"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.OnTargetTypeNameChanged(System.String,System.String)">
            <summary>
            TargetTypeNameProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.ValuePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.ValuePath"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.OnValuePathChanged(System.String,System.String)">
            <summary>
            ValuePathProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.TextPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.TextPath"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.OnTextPathChanged(System.String,System.String)">
            <summary>
            TextPathProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.ItemsSourcePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.ItemsSourcePath"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.OnItemsSourcePathChanged(System.String,System.String)">
            <summary>
            ItemsSourcePathProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.ToolTipMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.ToolTipMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.ToolTipContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.ToolTipContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeBinder.NodeStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.NodeBinder.NodeStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.OnNodeStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            NodeStyleProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.RetrieveItemsSource(System.Object)">
            <summary>
            Retrieves the items source.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.RetrieveText(System.Object)">
            <summary>
            Retrieves the text.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.RetrieveValue(System.Object)">
            <summary>
            Retrieves the value.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.RetrieveToolTip(System.Object)">
            <summary>
            Retrieves the ToolTip property.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.OnToolTipsPropertyChanged(System.Object,System.Object)">
            <summary>
            Called when the ToolTipMemberPath | ToolTipContentTemplate property is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinder.RetrieveObject(System.Object,System.String)">
            <summary>
            Retrieves the value of the property named valuePath of the instance object.
            </summary>
            <param name="instance">The instance.</param>
            <param name="valuePath">The value path.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.TargetTypeName">
            <summary>
            Gets or sets the name of the target type. Only data of that type is bound by this binder.
            </summary>
            <value>The name of the target type.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.ValuePath">
            <summary>
            Gets or sets the value path. It is the name of the property which is bound to the value of the treemap item.
            </summary>
            <value>The value path.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.TextPath">
            <summary>
            Gets or sets the text path. It is the name of the property which is bound to the text of the treemap item.
            </summary>
            <value>The text path.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.ItemsSourcePath">
            <summary>
            Gets or sets the items source path. It is the name of the property which is used as items source for the children of the treemap item.
            </summary>
            <value>The items source path.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.ToolTipMemberPath">
            <summary>
            Gets or sets the ToolTipMemberPath property.
            </summary>
            <value>The ToolTipMemberPath.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.ToolTipContentTemplate">
            <summary>
            Gets or sets the ToolTipContentTemplate property.
            </summary>
            <value>The ToolTipContentTemplate.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeBinder.NodeStyle">
            <summary>
            Gets or sets the node style. It overrides the style applied to the bound node.
            </summary>
            <value>The node style.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.NodeBinderCollection">
            <summary>
            This is a collection that contains the binders of the treemap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinderCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.NodeBinderCollection"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinderCollection.GetNodeBinder(System.Object)">
            <summary>
            Searches in all node binders and gets the node binder which matches the item type.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeBinderCollection.InsertItem(System.Int32,Infragistics.Controls.Charts.NodeBinder)">
            <summary>
            Inserts the item and sets it Treemap.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNodeComparer">
            <summary>
            This class compares two nodes by their value dtermined by the provided value mapper.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeComparer.#ctor(Infragistics.Controls.Charts.ValueMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.TreemapNodeComparer"/> class.
            </summary>
            <param name="valueMapper">The value mapper.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNodeDisplayMode">
            <summary>
            Determines how a node is displayed
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNodeDisplayMode.UIElement">
            <summary>
            A UIElement is created for the node
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNodeDisplayMode.Image">
            <summary>
            The node is too small for a UIElement so an image is creates
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNodeDisplayMode.TooSmall">
            <summary>
            The node is too small even for an image so it is not shown
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNodeDisplayMode.TooDeep">
            <summary>
            The node is deeper in the data hierarchy than the showing depth
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNodeInfo">
            <summary>
            This is a class that represent items of data before adding them to the layout
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNodeInfo.MinDisplaySize">
            <summary>
            the size beyond which the elements cannot be drawn - a 1 pixel node with 1 pixel frame makes 3 pixels size
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeInfo.#ctor(Infragistics.Controls.Charts.XamTreemap)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.TreemapNodeInfo"/> class.
            </summary>
            <param name="treemap">The treemap.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeInfo.BuildNodeTree(System.Collections.IEnumerable)">
            <summary>
            Builds the node tree. The building is breadth first
            </summary>
            <param name="itemsSource">The items source.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeInfo.UpdateBindings(Infragistics.Controls.Charts.NodeBinder)">
            <summary>
            Updates the bindings serching for nodes which match the modified binder.
            </summary>
            <param name="modifiedBinder">The modified binder.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeInfo.LastParentNode">
            <summary>
            Gets the topmost parent of the node.
            </summary>
            <value>The last parent node.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.NodesPanel">
            <summary>
            A panel that contains the children nodes of a node and is responsible for their sizes and positions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodesPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.NodesPanel"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodesPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. 
            Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can 
            give to child objects. Infinity can be specified as a value to indicate
            that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its 
            calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodesPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override 
            this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use
            to arrange itself and its children.</param>
            <returns>
            The actual size used once the element is arranged.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNode">
            <summary>
            The treemap node is the visual representation of a data item.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.TreemapNode"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Charts.TreemapNode"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNode.ToolTipProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.TreemapNode.ToolTip"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNode.TextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.TreemapNode.Text"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNode.FillProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.TreemapNode.Fill"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreemapNode.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.TreemapNode.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseEnter event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the MouseLeave event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the GotFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the LostFocus event.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes (such as a rebuilding layout pass) call
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions"> True to use transitions when updating the visual state, false to
            snap directly to the new visual state.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.Infragistics#IUpdateVisualState#UpdateVisualState(System.Boolean)">
            <summary>
            Update the visual state of the control.
            </summary>
            <param name="useTransitions">
            A value indicating whether to automatically generate transitions to
            the new state, or instantly transition to the new state.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNode.IsTopNode(System.Windows.RoutedEventArgs)">
            <summary>
            Determines whether a node is the top level ui element when a mouse move occurs.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
            <returns>
            	<c>true</c> if the node is a top level one; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNode.ToolTip">
            <summary>
            Gets or sets the ToolTip property.
            </summary>
            <value>
            The ToolTip.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNode.Text">
            <summary>
            The text that should be shown for the particular treemap node.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNode.Fill">
            <summary>
            The fill is the color of the particular treemap node.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNode.CornerRadius">
            <summary>
            The corner radius of the border of the particular treemap node.
            </summary>
            <value>The corner radius.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNode.Interaction">
            <summary>
            Gets or sets the helper that provides all of the standard
            interaction functionality. Making it internal for subclass access.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs">
            <summary>
            The event arguments of layout orientation changed event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs.#ctor(System.Windows.Controls.Orientation)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs"/> class.
            </summary>
            <param name="newLayoutOrientation">The new layout orientation.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs.NewLayoutOrientation">
            <summary>
            Gets or sets the new layout orientation.
            </summary>
            <value>The new layout orientation.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.LayoutTypeChangedEventArgs">
            <summary>
            The event arguments of layout type changed event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.LayoutTypeChangedEventArgs.#ctor(Infragistics.Controls.Charts.LayoutType)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.LayoutTypeChangedEventArgs"/> class.
            </summary>
            <param name="newLayoutType">New type of the layout.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.LayoutTypeChangedEventArgs.NewLayoutType">
            <summary>
            Gets or sets the new type of the layout.
            </summary>
            <value>The new type of the layout.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs">
            <summary>
            The event arguments of the events fired when a node is clicked.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeClickEventArgs.#ctor(Infragistics.Controls.Charts.TreemapNode,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeClickEventArgs.Node">
            <summary>
            Gets the clicked node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeClickEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse event args.
            </summary>
            <value>The mouse event args.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNodeMouseEventArgs">
            <summary>
            The event arguments of the mouse events of a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeMouseEventArgs.#ctor(Infragistics.Controls.Charts.TreemapNode,System.Windows.Input.MouseEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.TreemapNodeMouseEventArgs"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeMouseEventArgs.Node">
            <summary>
            Gets the clicked node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeMouseEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse event args.
            </summary>
            <value>The mouse event args.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreemapNodeMouseWheelEventArgs">
            <summary>
            The event arguments of the mouse wheel events of a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreemapNodeMouseWheelEventArgs.#ctor(Infragistics.Controls.Charts.TreemapNode,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.TreemapNodeMouseWheelEventArgs"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeMouseWheelEventArgs.Node">
            <summary>
            Gets the clicked node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreemapNodeMouseWheelEventArgs.MouseEventArgs">
            <summary>
            Gets or sets the mouse wheel event args.
            </summary>
            <value>The mouse wheel event args.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.LayoutType">
            <summary>
            The types of layout algorithm
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LayoutType.SliceAndDice">
            <summary>
            SliceAndDice – this algorithm aims to preserve the initial order at the expense of the aspect ratio.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LayoutType.Squarified">
            <summary>
            Squarified – this algorithm obtains the best aspect ratio but the objects are arranged by size.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.LayoutType.Strip">
            <summary>
            Strip – this tiling algorithm has a better aspect ratio than the SliceAndDice
            and keeps a better order than Squarified.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.SliceAndDice">
            <summary>
            Arranges the treemap using the slice and dice layout algorithm
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Squarified">
            <summary>
            Arranges the treemap using the squarified layout algorithm
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Squarified.WorstRatio(System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Double)">
            <summary>
            Calculates the worsts the ratio in a group of items.
            </summary>
            <param name="items">The items.</param>
            <param name="layoutSize">Size of the layout.</param>
            <param name="sizeCoef">The size coef.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Squarified.AddItems(Infragistics.Controls.Charts.XamTreemap,System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Windows.Rect@,System.Double@)">
            <summary>
            Adds the items to the treemap.
            </summary>
            <param name="treemap">The tree map.</param>
            <param name="items">The items.</param>
            <param name="container">The container.</param>
            <param name="remainingArea">The remaining area.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Squarified.AddRow(Infragistics.Controls.Charts.XamTreemap,System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Windows.Rect@,System.Double@)">
            <summary>
            Adds the row.
            </summary>
            <param name="treemap">The tree map.</param>
            <param name="row">The row.</param>
            <param name="rowArea">The row area.</param>
            <param name="container">The container.</param>
            <param name="remainingArea">The remaining area.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Squarified.AddColumn(Infragistics.Controls.Charts.XamTreemap,System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Windows.Rect@,System.Double@)">
            <summary>
            Adds the column.
            </summary>
            <param name="treemap">The tree map.</param>
            <param name="column">The column.</param>
            <param name="columnArea">The column area.</param>
            <param name="container">The container.</param>
            <param name="remainingArea">The remaining area.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Stripped">
            <summary>
            Arranges the treemap using the stripped layout algorithm
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stripped.AddStrip(Infragistics.Controls.Charts.XamTreemap,System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Windows.Rect@,System.Windows.Controls.Orientation,System.Boolean)">
            <summary>
            Adds a single strip.
            </summary>
            <param name="treemap">The tree map.</param>
            <param name="strip">The strip.</param>
            <param name="sizeCoef">The size coef.</param>
            <param name="container">The container.</param>
            <param name="direction">The direction.</param>
            <param name="lastStrip">if set to <c>true</c> [last strip].</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stripped.AddHorizontalStrip(Infragistics.Controls.Charts.XamTreemap,System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Windows.Rect@,System.Boolean)">
            <summary>
            Adds the horizontal strip.
            </summary>
            <param name="treemap">The tree map.</param>
            <param name="strip">The strip.</param>
            <param name="sizeCoef">The size coef.</param>
            <param name="container">The container.</param>
            <param name="lastStrip">if set to <c>true</c> [last strip].</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stripped.AddVerticalStrip(Infragistics.Controls.Charts.XamTreemap,System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Windows.Rect@,System.Boolean)">
            <summary>
            Adds the vertical strip.
            </summary>
            <param name="treemap">The tree map.</param>
            <param name="strip">The strip.</param>
            <param name="sizeCoef">The size coef.</param>
            <param name="container">The container.</param>
            <param name="lastStrip">if set to <c>true</c> [last strip].</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stripped.CalculateAverageStripRatio(System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo},System.Double,System.Double)">
            <summary>
            Calculates the average strip ratio.
            </summary>
            <param name="strip">The strip.</param>
            <param name="stripLength">Length of the strip.</param>
            <param name="sizeCoef">The size coef.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Stripped.CalculateStripArea(System.Collections.Generic.List{Infragistics.Controls.Charts.TreemapNodeInfo})">
            <summary>
            Calculates the strip area.
            </summary>
            <param name="strip">The strip.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.GroupValueMapper">
            <summary>
            The GroupValueMapper groups the nodes of the xamTreemap depending on a specified value. The similar nodes gain the same  group value.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ValueMapper">
            <summary>
            Base class that provides mapping of some data of the tree map items source
            to a property of the corresponding tree map item.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ValueMapper"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueMapper.TargetNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ValueMapper.TargetName"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.OnTargetNameChanged(System.String,System.String)">
            <summary>
            TargetNameProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueMapper.TargetPropertyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ValueMapper.TargetProperty"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.OnTargetPropertyChanged(System.String,System.String)">
            <summary>
            TargetPropertyProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueMapper.ValueTypeNameProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ValueMapper.ValueTypeName"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.OnValueTypeNameChanged(System.String,System.String)">
            <summary>
            ValueTypeNameProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueMapper.ValuePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ValueMapper.ValuePath"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ValueMapper.MappingModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.ValueMapper.MappingMode"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.OnMappingModeChanged(Infragistics.Controls.Charts.MappingMode,Infragistics.Controls.Charts.MappingMode)">
            <summary>
            MappingModeProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.MapValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            Maps the value.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapper.ResetValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            This function is called when the value of a certain node should be reset.
            One needs to override it in order to get the desired behavior of the reset
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueMapper.TargetName">
            <summary>
            If you have a custom template for the xamTreemap control’s nodes and you have a named element, you can use TargetName to specify this element.
            </summary>
            <value>The name of the target.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueMapper.TargetProperty">
            <summary>
            The name of the property of the tree map item the value of which will be mapped to some data.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueMapper.ValueTypeName">
            <summary>
            Value type name determines the name of the type which has the field containing data specified by ValuePath.
            </summary>
            <value>The name of the value type.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueMapper.ValuePath">
            <summary>
            The path to the property of the data which determines its value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ValueMapper.MappingMode">
            <summary>
            Determines whether the leaves or all nodes will be mapped.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GroupValueMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.GroupValueMapper"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GroupValueMapper.GroupValuesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.GroupValueMapper.GroupValues"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GroupValueMapper.OnGroupValuesChanged(System.Collections.ObjectModel.ObservableCollection{System.Object},System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            GroupValuesProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.GroupValueMapper.OrderProperty">
            <summary>
            Identifies the Order dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GroupValueMapper.OnOrderChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:OrderChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.GroupValueMapper.MapValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            Maps the value.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.GroupValueMapper.ResetValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            This function is called when the value of a certain node should be reset.
            One needs to override it in order to get the desired behavior of the reset
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.GroupValueMapper.GroupValues">
            <summary>
            Gets or sets the group values. GroupValues is a collection of values which the similar objects gain.
            </summary>
            <value>The group values.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.GroupValueMapper.Order">
            <summary>
            If Ascending, the first group value is assigned to the smallest element.
            If Descending the first group value is assigned to the biggest element.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.MappingInfo">
            <summary>
            This is a class that contains the needed info when a mapping is set 
            so that afterwards it can be reset to its initial value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.MappingInfo.Mapper">
            <summary>
            The mapped by which the mapping is set. When resetting sometimes is needed to reset only the mappings of a certain mapper.
            </summary>
            <value>The mapper.</value>
        </member>
        <member name="T:Infragistics.Controls.Charts.MappingMode">
            <summary>
            Determines whether the leaves or all nodes will be mapped.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MappingMode.LeafNodesOnly">
            <summary>
            Leaf nodes only are mapped.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.MappingMode.AllNodes">
            <summary>
            All nodes are mapped.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NodeDistance">
            <summary>
            The distance between tho nodes is the abs of the difference between them.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ColorMapper">
            <summary>
            The ColorMapper adds color to the nodes of the xamTreemap depending on a specified value. It maps some property of the data to a property of the node – for example the fill color or foreground color.
            From and To – these two properties determine the range in which the color is determined depending on the value of each node.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RangeMapper">
            <summary>
            Value mapper that maps to values in the range between DataMinimum and DataMaximum
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.RangeMapper"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RangeMapper.DataMinimumProperty">
            <summary>
            Identifies the Minimum dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeMapper.OnDataMinimumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:DataMinimumChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.RangeMapper.DataMaximumProperty">
            <summary>
            Identifies the Maximun dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeMapper.OnDataMaximumChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:DataMaximumChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeMapper.GetRelativeValue(System.Double)">
            <summary>
            Gets the relative value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeMapper.GetRelativeValue(Infragistics.Controls.Charts.TreemapNodeInfo)">
            <summary>
            Gets the relative value. This is a value between 0 and 1 which determines 
            how close the value is to the DataMinimum and DataMaximum.
            </summary>
            <param name="node">The treemap node.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.RangeMapper.UpdateDataRange(System.Double)">
            <summary>
            Updates the data range.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeMapper.DataMinimum">
            <summary>
            Gets or sets the data minimum. If the value specified by ValuePath is less than DataMinimum for a certain node then the mapper applies the value of the From property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeMapper.DataMaximum">
            <summary>
             Gets or sets the data maximum. If the value specified by ValuePath is more than DataMaximum for a certain node then the mapper applies the value of the To property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeMapper.ActualDataMinimum">
            <summary>
            Gets or sets the actual data minimum. This is the lowest value among all mapped items.
            </summary>
            <value>The actual data minimum.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.RangeMapper.ActualDataMaximum">
            <summary>
            Gets or sets the actual data maximum. This is the highest value among all mapped items.
            </summary>
            <value>The actual data maximum.</value>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ColorMapper"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorMapper.FromProperty">
            <summary>
            Identifies the From dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorMapper.OnFromChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FromChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ColorMapper.ToProperty">
            <summary>
            Identifies the To dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorMapper.OnToChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ToChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorMapper.MapValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            Maps the value.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ColorMapper.ResetValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            This function is called when the value of a certain node should be reset.
            One needs to override it in order to get the desired behavior of the reset
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColorMapper.From">
            <summary>
            This is the lower value from which the mapper maps
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ColorMapper.To">
            <summary>
            This is the higher value to which the mapper maps
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DoubleMapper">
            <summary>
            The DoubleMapper sets a numeric value to the nodes’ template of the xamTreemap depending on a specified property from the nodes’ data context.
            From and To – these two properties determine the range of the value which will be applied to the node’s template.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DoubleMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DoubleMapper"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DoubleMapper.FromProperty">
            <summary>
            Identifies the From dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DoubleMapper.OnFromChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FromChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DoubleMapper.ToProperty">
            <summary>
            Identifies the To dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DoubleMapper.OnToChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ToChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DoubleMapper.MapValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            Maps the value.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DoubleMapper.ResetValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            This function is called when the value of a certain node should be reset.
            One needs to override it in order to get the desired behavior of the reset
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DoubleMapper.From">
            <summary>
            This is the lower value from which the mapper maps
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DoubleMapper.To">
            <summary>
            This is the higher value to which the mapper maps
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.RadialColorMapper">
            <summary>
            The RadialColorMapper adds color with a radial gradient brush to the nodes of the xamTreemap depending on a specified value. 
            It maps some property of the data to a property of the node – for example the fill color or foreground color.
            From and To – these two properties determine the range in which the color is determined depending on the value of each node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColorMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.RadialColorMapper"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialColorMapper.FromProperty">
            <summary>
            Identifies the From dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColorMapper.OnFromChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:FromChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.RadialColorMapper.ToProperty">
            <summary>
            Identifies the To dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColorMapper.OnToChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ToChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColorMapper.MapValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            Maps the value.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.RadialColorMapper.ResetValue(Infragistics.Controls.Charts.TreemapNode)">
            <summary>
            This function is called when the value of a certain node should be reset.
            One needs to override it in order to get the desired behavior of the reset
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialColorMapper.From">
            <summary>
            This is the lower value from which the mapper maps
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.RadialColorMapper.To">
            <summary>
            This is the higher value to which the mapper maps
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ValueMapperCollection">
            <summary>
            The collection of all value mappers used by a treemap
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapperCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.ValueMapperCollection"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ValueMapperCollection.InsertItem(System.Int32,Infragistics.Controls.Charts.ValueMapper)">
            <summary>
            Inserts the item and sets its Treemap.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.strings.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.strings.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.strings.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.strings.Strings.NonIEnumerableValue">
            <summary>
              Looks up a localized string similar to &quot;{1}.{0}&quot; property does not represent an IEnumerable value..
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.strings.Strings.NonNumericValue">
            <summary>
              Looks up a localized string similar to &quot;{1}.{0}&quot; property does not represent a numeric value..
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.strings.Strings.NoValidNodes">
            <summary>
              Looks up a localized string similar to There are not any valid treemap nodes. Please check the items source and the data binders..
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.strings.Strings.PropertyDoesNotExist">
            <summary>
              Looks up a localized string similar to &quot;{1}.{0}&quot; property does not exist..
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamTreemap">
            <summary>
            The Treemap control. Treemaps display hierarchical (tree-structured) data as a set of nested nodes.
            Each branch of the tree is given a treemap node, which is then tiled with smaller nodes representing sub-branches.
            Each node's rectangle has an area proportional to a specified dimension on the data.
            Often the nodes are colored to show a separate dimension of the data.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.XamTreemap"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Charts.XamTreemap"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.NodeBindersProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.NodeBinders"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnNodeBindersChanged(Infragistics.Controls.Charts.NodeBinderCollection,Infragistics.Controls.Charts.NodeBinderCollection)">
            <summary>
            NodeBindersProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.ValueMappersProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.ValueMappers"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnValueMappersChanged(Infragistics.Controls.Charts.ValueMapperCollection,Infragistics.Controls.Charts.ValueMapperCollection)">
            <summary>
            ValueMappersProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.LayoutTypeProperty">
            <summary>
            Identifies the <see cref="T:System.Type"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.LayoutOrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.LayoutOrientation"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.ShowingDepthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.ShowingDepth"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.ItemMinSizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.ItemMinSize"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.ItemsSource"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.ItemsSourceRootProperty">
            <summary>
            Identifies the ItemSourceRoot dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnItemsSourceRootChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsSourceRootChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamTreemap.ToolTipStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamTreemap.ToolTipStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnToolTipStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the ToolTipStyle property is changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnToolTipStyleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="!:ToolTipStyleChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnNodeMouseLeftButtonDown(Infragistics.Controls.Charts.TreemapNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseLeftButtonDown"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnNodeMouseLeftButtonUp(Infragistics.Controls.Charts.TreemapNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseLeftButtonUp"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnNodeMouseRightButtonDown(Infragistics.Controls.Charts.TreemapNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseRightButtonDown"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.RaiseNodeMouseRightButtonUp(Infragistics.Controls.Charts.TreemapNodeClickEventArgs)">
            <summary>
            Raises the node mouse right button up.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnNodeMouseRightButtonUp(Infragistics.Controls.Charts.TreemapNodeClickEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseRightButtonUp"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.TreemapNodeClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnNodeMouseMove(Infragistics.Controls.Charts.TreemapNodeMouseEventArgs)">
            <summary>
            Raises the <see cref="E:NodeMouseMove"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnLayoutTypeChanged(Infragistics.Controls.Charts.LayoutTypeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:LayoutTypeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.LayoutTypeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnLayoutOrientationChanged(Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs)">
            <summary>
            Raises the <see cref="E:LayoutOrientationChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.Controls.Charts.LayoutOrientationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.RaiseErrorMessageDisplaying(Infragistics.ErrorMessageDisplayingEventArgs)">
            <summary>
            Raises the error message displaying.
            </summary>
            <param name="e">The <see cref="T:Infragistics.ErrorMessageDisplayingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnErrorMessageDisplaying(Infragistics.ErrorMessageDisplayingEventArgs)">
            <summary>
            Raises the <see cref="E:ErrorMessageDisplaying"/> event.
            </summary>
            <param name="e">The <see cref="T:Infragistics.ErrorMessageDisplayingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes (such as a rebuilding layout pass) call
            <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.MeasureOverride(System.Windows.Size)">
            <summary>
            Method overridden to provide a default height and width.
            </summary>
            <param name="availableSize">The available size that this object can
            give to child objects. Infinity can be specified as a value to indicate that the
            object will size to whatever content is available.</param>
            <returns>The size that this object determines it needs during layout, based on
            its calculations of child object allotted sizes.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.IsInDesignMode">
            <summary>
            Returns whether the control is in design mode (running under Blend
            or Visual Studio).
            </summary>
            <returns>True if in design mode.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamTreemap.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.NodeBinders">
            <summary>
            Gets or sets the node binders. This is the collection of all the binders that the treemap uses.
            </summary>
            <value>The node binders.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ValueMappers">
            <summary>
            Gets or sets the value mappers. This is the collection of all the mappers that the treemap uses.
            </summary>
            <value>The value mappers.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.LayoutType">
            <summary>
            Gets or sets the type of the layout. It determines the layout algorithm of the treemap.
            </summary>
            <value>The type of the layout.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.LayoutOrientation">
            <summary>
            Gets or sets the layout direction.
            </summary>
            <value>The layout direction.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ShowingDepth">
            <summary>
            This is the depth of the last level to show.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ItemMinSize">
            <summary>
            Gets or sets the size of the item min.
            The ItemMinSize property allows the user to set the minimum size of the nodes.
            If a node’s width or height is smaller than the ItemMinSize, then the node is rendered as a writeable bitmap image.
            </summary>
            <value>The size of the item min.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ItemsSource">
            <summary>
            Gets or sets the items source. It is an enumerable which represents the hierarchical data of the treemap.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ItemsSourceRoot">
            <summary>
            This is a subitem of the items source which will be used as a treemap root
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.DefaultStyle">
            <summary>
            A description of the property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ActualShowingDepth">
            <summary>
            Gets or sets the actual showing depth. Actual Showing Depth
            The xamTreemap control’s ActualShowingDepth property specifies the maximum hierarchy level that is displayed. In the case when a custom ShowingDepth is set this value is always lower or equal to the ShowingDepth.
            If you have a hierarchy set as a data source which has only two levels and you set the ShowingDepth property to 5, the ActualShowingDepth property is going to be 2.
            </summary>
            <value>The actual showing depth.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.ToolTipStyle">
            <summary>
            Sets or gets xamTreemap's ToolTipStyle property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamTreemap.CustomValueMappers">
            <summary>
            Contains all the custom mappers. If we do not have them when clearing the mappers container we cannot clear their mappings.
            </summary>
            <value>The custom value mappers.</value>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseLeftButtonDown">
            <summary>
            Occurs when the mouse left button is pushed over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseLeftButtonUp">
            <summary>
            Occurs when mouse left button is released over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseRightButtonDown">
            <summary>
            Occurs when mouse right button is pushed over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseRightButtonUp">
            <summary>
            Occurs when mouse right button is released over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseMove">
            <summary>
            Occurs when mouse is moved over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseWheel">
            <summary>
            Occurs when mouse wheel is moved over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.NodeMouseDoubleClick">
            <summary>
            Occurs when mouse double clicked over a node.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.LayoutTypeChanged">
            <summary>
            Occurs when layout type is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.LayoutOrientationChanged">
            <summary>
            Occurs when layout orientation is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamTreemap.ErrorMessageDisplaying">
            <summary>
            Occurs when error message is being displayed.
            </summary>
        </member>
    </members>
</doc>
