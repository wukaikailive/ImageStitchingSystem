<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Layouts.XamTileManager.v15.2</name>
    </assembly>
    <members>
        <member name="P:Infragistics.Controls.Primitives.DataListChangeInfo.FirstAndOnlyNewItem">
            <summary>
            If the NewItems has only single item, then returns it. If it has no items or has more
            than 1 items, it returns null.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.DataListEventListener.#ctor(System.Object,System.Action{System.Object,Infragistics.Controls.Primitives.DataListEventListener,Infragistics.Controls.Primitives.DataListChangeInfo},System.Action{System.Object,System.Object,System.String},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="owner">Owner object which is passed in as the first argument when the handler is invoked.
            The handler is typically a reference to a static method and therefore it needs to know which owner
            to delegate the processing to.</param>
            <param name="listChangedHandler">Called when list changes.</param>
            <param name="itemPropChangedHandler">Called when a list item changes.</param>
            <param name="hookIntoItemsNotifyPropChanged">Hook into prop changed.</param>
            <param name="autoHookItemsNotifyPropChanged">If thru will callHookIntoDataItem automatically</param>
        </member>
        <member name="P:Infragistics.Controls.Primitives.DataListEventListener.SupportsItemPropChangeNotifications">
            <summary>
            Indicates if the data items' property change notifications are going to be raised.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.ClickHelper">
            <summary>
            Helper class for invoking an action on the left mouse up.
            </summary>
        </member>
        <member name="T:Infragistics.Collections.ObservableItemCollection">
            <summary>
            Collection used by controls that expose both an Items and an itemsSource property. 
            </summary>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds the elements of a collection to the end of this collection.
            </summary>
            <param name="collection">The collection whose elements should be inserted into the List. The collection itself cannot be null, but it can contain elements that are null.</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.BeginUpdate">
            <summary>
            Prevents change notifications (e.g. <see cref="E:Infragistics.Collections.ObservableItemCollection.CollectionChanged"/> and <see cref="E:Infragistics.Collections.ObservableItemCollection.PropertyChanged"/>) from being raised.
            </summary>
            <remarks>
            <para class="body"> The <see cref="M:Infragistics.Collections.ObservableItemCollection.EndUpdate"/> method must be called exactly once for each time that the BeginUpdate method is called.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.EndUpdate">
            <summary>
            Resumes change notifications (e.g. <see cref="E:Infragistics.Collections.ObservableItemCollection.CollectionChanged"/> and <see cref="E:Infragistics.Collections.ObservableItemCollection.PropertyChanged"/>).
            </summary>
            <remarks>
            <para class="body"> The <see cref="M:Infragistics.Collections.ObservableItemCollection.EndUpdate"/> method must be called exactly once for each time that the BeginUpdate method is called.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.InsertRange(System.Int32,System.Collections.IEnumerable)">
            <summary>
            Inserts the elements of a collection into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the List. The collection itself cannot be null, but it can contain elements that are null.</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
             Removes a contiguous block of items from the collection.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.Add(System.Object)">
            <summary>
            Adds an item
            </summary>
            <param name="value">The object to add</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.Clear">
            <summary>
            Removes all items
            </summary>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the System.Collections.IList contains a specific value.
            </summary>
            <param name="value">The object to locate.</param>
            <returns>true if the object is found; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item
            </summary>
            <param name="value">The object to locate</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object.
            </summary>
            <param name="item">The object to remove</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the collection to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Infragistics.Collections.ObservableItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Infragistics.Collections.ObservableItemCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether collection has a fixed size.
            </summary>
            <value>true if the collection has a fixed size; otherwise, false.</value>
        </member>
        <member name="P:Infragistics.Collections.ObservableItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>true if the collection is read-only; otherwise, false.</value>
        </member>
        <member name="P:Infragistics.Collections.ObservableItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:Infragistics.Collections.ObservableItemCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ObservableItemCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (i.e. thread safe).
            </summary>
        </member>
        <member name="P:Infragistics.Collections.ObservableItemCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="E:Infragistics.Collections.ObservableItemCollection.CollectionChanged">
            <summary>
            Notifies listeners of dynamic changes, such as when items get added and removed or the whole list is refreshed.
            </summary>
        </member>
        <member name="E:Infragistics.Collections.ObservableItemCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter"/> type to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer.#ctor(Infragistics.Controls.Layouts.Primitives.TileAreaSplitter)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer"/> class
            </summary>
            <param name="splitter">The <see cref="T:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>DataItem</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer.GetChildrenCore">
            <summary>
            Creates and returns a list of peers that represent the items in the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>.
            </summary>
            <returns>A list of <see cref="T:Infragistics.AutomationPeers.TileItemAutomationPeer"/>s that represent each item in the list.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Layouts.XamTile"/>
            </summary>
            <returns>A string that contains 'TileAreaSplitter'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:System.Windows.UIElement"/> that corresponds with the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that is associated with this <see cref="T:Infragistics.AutomationPeers.XamTileAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer.IsOffscreenCore">
            <summary>
            Returns a value that indicates whether the System.Windows.UIElement that corresponds with the object that is associated with this System.Windows.Automation.Peers.AutomationPeer is off the screen.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.TileItemAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> type to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>ListItem</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.GetClassNameCore">
            <summary>
            Returns the class name
            </summary>
            <returns>A string that contains 'TileItem'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.GetNameCore">
            <summary>
            Returns the text label for the <see cref="T:System.Windows.UIElement"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>.
            </summary>
            <returns>The text label</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:System.Windows.UIElement"/> that corresponds with the <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> that is associated with this <see cref="T:Infragistics.AutomationPeers.TileItemAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.GetUnderlyingPeer">
            <summary>
            Returns the automation peer for which this proxy is associated.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamTileAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.IsEnabledCore">
            <summary>
            Returns true if the underlying item is enabled
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.TileItemAutomationPeer.IsOffscreenCore">
            <summary>
            Returns a value that indicates whether the System.Windows.UIElement that corresponds with the object that is associated with this System.Windows.Automation.Peers.AutomationPeer is off the screen.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.TileItemAutomationPeer.ItemInfo">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> object (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamTileAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Layouts.XamTile"/> type to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileAutomationPeer.#ctor(Infragistics.Controls.Layouts.XamTile)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.AutomationPeers.XamTileAutomationPeer"/> class
            </summary>
            <param name="tile">The <see cref="T:Infragistics.Controls.Layouts.XamTile"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>DataItem</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Layouts.XamTile"/>
            </summary>
            <returns>A string that contains 'Tile'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:System.Windows.UIElement"/> that corresponds with the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that is associated with this <see cref="T:Infragistics.AutomationPeers.XamTileAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileAutomationPeer.IsOffscreenCore">
            <summary>
            Returns a value that indicates whether the System.Windows.UIElement that corresponds with the object that is associated with this System.Windows.Automation.Peers.AutomationPeer is off the screen.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamTileManagerAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> type to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileManagerAutomationPeer.#ctor(Infragistics.Controls.Layouts.XamTileManager)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.AutomationPeers.XamTileManagerAutomationPeer"/> class
            </summary>
            <param name="control">The <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileManagerAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>List</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileManagerAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>
            </summary>
            <returns>A string that contains 'XamTileManager'</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileManagerAutomationPeer.GetChildrenCore">
            <summary>
            Creates and returns a list of peers that represent the items in the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>.
            </summary>
            <returns>A list of <see cref="T:Infragistics.AutomationPeers.TileItemAutomationPeer"/>s that represent each item in the list.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamTileManagerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that is associated with this <see cref="T:Infragistics.AutomationPeers.XamTileAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileDragIndicator">
            <summary>
            This control is used for displaying drag indicator when a tile is being dragged.
            </summary>
            <remarks>
            <b>Note</b> that there is no need for you to instantiate this directly. This control 
            is created automatically when the user starts a drag operation.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragIndicator.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Controls.Layouts.Primitives.TileDragIndicator"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileDragIndicator.ContainerProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.Primitives.TileDragIndicator.Container"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileDragIndicator.Container">
            <summary>
            Returns the FrameworkElement containing the item being dragged (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileDragManager">
            <summary>
            Class with the logic for starting and managing dragging and dropping of a tile.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.#ctor(Infragistics.Controls.Layouts.Primitives.TileAreaPanel,System.Windows.FrameworkElement,Infragistics.Controls.Layouts.ItemTileInfo,Infragistics.Controls.Layouts.TileLayoutManager.LayoutItem,System.Windows.FrameworkElement,Infragistics.Controls.Layouts.AllowTileDragging)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.DragHelper_GetDropInfoHelper(Infragistics.Controls.Layouts.Primitives.TileDragManager.PointInfo,System.Windows.Point@)">
            <summary>
            Gets the drop info and also displays/moves the drag indicator.
            </summary>
            <param name="mouseLoc"></param>
            <param name="dragIndicatorLocation"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.OnDragEnd(System.Windows.Input.MouseEventArgs,System.Boolean)">
            <summary>
            Called to indicate that the drag operation has ended. Drop will be processed if 'cancel' parameter
            is false.
            </summary>
            <param name="mouseEventArgs">Mouse event args associated with the drag end.</param>
            <param name="cancel">Indicates whether to process the drop operation.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called whenever mouse is moved while drag operation is in progress.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.StartDrag(System.Windows.Point)">
            <summary>
            Starts dragging operation. It displays the drag indicator to indicate that dragging operation is in progress.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileDragManager.Panel">
            <summary>
            Returns the associated panel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileDragManager.TileLayoutManager">
            <summary>
            Returns the associated tiles manager.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileDragManager.Tile">
            <summary>
            Returns the field being dragged.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileDragManager.DropInfo">
            <summary>
            Contains information about a specific drop. It contains info on the new layout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.DropInfo.#ctor(Infragistics.Controls.Layouts.Primitives.TileDragManager,System.Boolean)">
            <summary>
            Constructs an invalid drop info. Used for figuring out the drag indicator location.
            </summary>
            <param name="dragManager"></param>
            <param name="isDragAreaInvalid"></param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileDragManager.DropInfo.IsDragAreaInvalid">
            <summary>
            Indicates if the item is currently being dragged outside of valid drop area.
            For example, if the item is 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileDragManager.RectInfo">
            <summary>
            Contains rect information and the element its relative to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.RectInfo.#ctor(Infragistics.Controls.Layouts.Primitives.TileDragManager,System.Windows.Rect,System.Windows.FrameworkElement)">
            <summary>
            Constructor
            </summary>
            <param name="dragManager">Drag manager</param>
            <param name="rect">Rectangle</param>
            <param name="relativeTo">This is the element that the specified rectangle is relative to. If null then
            the rect is taken to be relative to the screen.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.RectInfo.GetRect">
            <summary>
            Gets the rect relative to data presenter.
            </summary>
            <returns>Rect relative to data presenter.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.RectInfo.GetRect(System.Windows.UIElement)">
            <summary>
            Gets the rect relative to specified element. If null then gets the rect in screen coordinates.
            </summary>
            <param name="relativeTo"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.RectInfo.Contains(Infragistics.Controls.Layouts.Primitives.TileDragManager.PointInfo)">
            <summary>
            Checks to see if the rect contains specified point.
            </summary>
            <param name="point">Point to check.</param>
            <returns>True if the rect contains the point, false otherwise.</returns>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileDragManager.PointInfo">
            <summary>
            Contains point info and which element its relative to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileDragManager.PointInfo.GetPosition">
            <summary>
            Returns the mouse position relative to data presenter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Layouts.ItemTileInfo">
            <summary>
            An object that maintains certain status information for an item in a tile
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.ItemTileInfo.BringIntoView">
            <summary>
            Brings the item into view
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.ItemTileInfo.GetCurrentColumn">
            <summary>
            Returns the column of the item in the current display 
            </summary>
            <returns>The current zero-based column, if the item is currently displayed, otherwise it returns -1.</returns>
            <remarks>
            <para class="note"><b>Note:</b> this value is relative to the first column of items being currently displayed</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.ItemTileInfo.GetCurrentConstraints">
            <summary>
            Returns the resolved constraints of this item in the current display 
            </summary>
            <returns>An object that implements the <see cref="T:Infragistics.Controls.Layouts.ITileConstraints"/> interface for this item, if the item is currently displayed, otherwise it returns null.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.ItemTileInfo.GetCurrentRow">
            <summary>
            Returns the row of the item in the current display 
            </summary>
            <returns>The current zero-based row, if the item is currently displayed, otherwise it returns -1.</returns>
            <remarks>
            <para class="note"><b>Note:</b> this value is relative to the first row of items being currently displayed</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.ItemTileInfo.GetCurrentTargetRect">
            <summary>
            Returns the current target rect of the item 
            </summary>
            <returns>The current target rect, after animations have been completed. If the item will not be in view then Rect.Empty will be returned.</returns>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.Index">
            <summary>
            Returns the index of the item in the Items collection (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.IsClosed">
            <summary>
            Gets/sets whether this item is closed.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.IsClosed"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.IsExpandedWhenMinimized">
            <summary>
            Gets/sets whether this item is expanded when it is minimized.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimized"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.IsExpandedWhenMinimizedResolved">
            <summary>
            Gets the whether this item is expanded when it is minimized (read-only).
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimized"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.IsMaximized">
            <summary>
            Gets/sets whether this item's state is 'Maximized'.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.AllowMaximize"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.State"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileState"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.Item">
            <summary>
            Returns the associated item (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.LogicalIndex">
            <summary>
            Returns the logical index of the item (read-only)
            </summary>
            <value>A zero-based index representing the item's relative position in the display or -1 if the item was not found.</value>
            <remarks>
            <para class="note"><b>Note:</b> this will return the same value as the <see cref="P:Infragistics.Controls.Layouts.ItemTileInfo.Index"/> property unless the user has re-positioned one or more <see cref="T:Infragistics.Controls.Layouts.XamTile"/>s in which case the logical index represents the position of this item relative to other items.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.OccupiesScrollPosition">
            <summary>
            Returns true if this item occupies a scroll position (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this will return false if the item is closed or maximized.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.ScrollPosition">
            <summary>
            Gets the overall scroll position of this item (read-only).
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> items that are collapsed or maximized are not included in the scroll count.</para>
            </remarks>
            <value>The zero based scroll position or -1 for collapsed or maximized items.</value>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ItemTileInfo.SizeOverride">
            <summary>
            Gets/sets an explicit size to be returned as the item's preferred size.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this setting may be ignored if a synchronized size is being used. Otherwise, if this property returns a width and/or height > 0 it will take precedence over all other settings but only when the item's state is normal.</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Layouts.MaximizedModeSettings">
            <summary>
            Contains settings that are used to lay out Tiles inside a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> when in maximized mode.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettings"/>
        </member>
        <member name="T:Infragistics.Controls.Layouts.ModeSettingsBase">
            <summary>
            Abstract base class that contains settings that are common to both Normal mode and Maximized mode in a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>.
            </summary>
            <seealso cref="T:Infragistics.Controls.Layouts.NormalModeSettings"/>
            <seealso cref="T:Infragistics.Controls.Layouts.MaximizedModeSettings"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettings"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedModeSettings"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ModeSettingsBase.AllowTileDraggingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.AllowTileDragging"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimate"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ModeSettingsBase.AllowTileDragging">
            <summary>
            Gets/sets whether the user is allowed to drag tiles to reposition them.
            </summary>
            <value>The AllowTileDragging enum. The default is 'Swap'</value>
            <seealso cref="F:Infragistics.Controls.Layouts.ModeSettingsBase.AllowTileDraggingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimation">
            <summary>
            Determines how a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> animates from one location to another.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property will be ignored if <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimate"/> is set to 'False'.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimation"/>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimate"/>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimation"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimation">
            <summary>
            Determines how a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> animates from one size to another.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property will be ignored if <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimate"/> is set to 'False'.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimation"/>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimate"/>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimate">
            <summary>
            Gets/sets whether tiles will animate to their new position and size
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property defaults to 'True' but when set to 'False' will cause the <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimation"/> and <see cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimation"/> properties to be ignored.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.ResizeAnimation"/>
            <seealso cref="P:Infragistics.Controls.Layouts.ModeSettingsBase.RepositionAnimation"/>
            <seealso cref="F:Infragistics.Controls.Layouts.ModeSettingsBase.ShouldAnimateProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.HorizontalTileAreaAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.HorizontalTileAreaAlignment"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacing"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLocationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLocation"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLayoutOrderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLayoutOrder"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileConstraintsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileConstraints"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileConstraintsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileConstraints"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpandButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpandButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedExpandedTileConstraintsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedExpandedTileConstraints"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowAllMinimizedTilesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowAllMinimizedTiles"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowTileAreaSplitterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowTileAreaSplitter"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedModeSettings.VerticalTileAreaAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.VerticalTileAreaAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.HorizontalTileAreaAlignment">
            <summary>
            Determines the horizontal alignment of the complete block of visible tiles within the control.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> For <see cref="T:Infragistics.Controls.Layouts.MaximizedModeSettings"/>, this property applies to the minimized tile area only.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.HorizontalTileAreaAlignmentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacing">
            <summary>
            Gets/sets the amount of spacing between the maximized tile area and the minimized tile area when in maximized mode.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> or <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> value will be used based on the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLocation"/>.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileAreaSpacingResolved"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximized">
            <summary>
            Gets/sets the amount of spacing between maximized tiles horizontally.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is not set the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> setting will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMaximizedResolved"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacing"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimized"/>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimized">
            <summary>
            Gets/sets the amount of spacing between minimized tiles horizontally.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is not set the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> setting will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMinimizedResolved"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximized"/>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximized">
            <summary>
            Gets/sets the amount of spacing between maximized tiles vertically.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is not set the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> setting will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMaximizedResolved"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacing"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimized"/>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimized">
            <summary>
            Gets/sets the amount of spacing between minimized tiles vertically.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if this property is not set the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> setting will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMinimizedResolved"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximized"/>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLocation">
            <summary>
            Gets/sets where the maximized tiles will be arranged
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLocationProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLayoutOrder">
            <summary>
            Gets/sets how multiple maximized tiles are laid out relative to one another
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: This property only has meaning if the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit"/> is set to a value greater than 1.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileLayoutOrderProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileConstraints">
            <summary>
            Gets/sets the constraints use for sizing a tile when it's <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Maximized'
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MaximizedTileConstraintsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileConstraints">
            <summary>
            Gets/sets the constraints use for sizing a tile when it's <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Minimized'
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileConstraintsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpandButtonVisibility">
            <summary>
            Gets/sets the default visibility of the expand button in a <see cref="T:Infragistics.Controls.Layouts.XamTile"/>'s header.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpandButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedExpandedTileConstraints">
            <summary>
            Gets/sets the constraints use for sizing a tile when it's <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'MinimizedExpanded'
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedExpandedTileConstraintsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode">
            <summary>
            Gets/sets how many minimized tiles may be expanded.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionModeProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpandButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowAllMinimizedTiles">
            <summary>
            Gets/sets whether all minimized tiles are arranged in view
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> even if this property is set to true it is still possible that all the minimized tiles don't fit, e.g. if there isn't enough space to satisfy their minimum size constraints. In this case, scrollbars will appear.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowAllMinimizedTilesProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.NormalModeSettings.ShowAllTiles"/>
            <seealso cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileConstraints"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowTileAreaSplitter">
            <summary>
            Gets/sets whether a splitter will be shown between the maximized and minimized tile areas which can be used to control the relative size of the these areas.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowTileAreaSplitterProperty"/>
            <seealso cref="T:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.MaximizedModeSettings.VerticalTileAreaAlignment">
            <summary>
            Determines the vertical alignment of the complete block of visible tiles within the control.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> For <see cref="T:Infragistics.Controls.Layouts.MaximizedModeSettings"/>, this property applies to the minimized tile area only.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.MaximizedModeSettings.VerticalTileAreaAlignmentProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Layouts.NormalModeSettings">
            <summary>
            Contains settings that are used to lay out Tiles inside a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> when not in maximized mode.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettings"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.ExplicitLayoutTileSizeBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.ExplicitLayoutTileSizeBehavior"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.HorizontalTileAreaAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.HorizontalTileAreaAlignment"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.MaxColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.MaxColumns"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.MaxRowsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.MaxRows"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.MinColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.MinColumns"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.MinRowsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.MinRows"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.ShowAllTilesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.ShowAllTiles"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.TileConstraintsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileConstraints"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrder"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.NormalModeSettings.VerticalTileAreaAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.VerticalTileAreaAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing">
            <summary>
            Gets/sets whether the user will be allowed to re-size tiles.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> the 'Synchronized' setting (the default) is ignored in maximized mode or if <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrder"/> is set to 'UseExplicitRowColumnOnTile'. 
            Also, if TileLayoutOrder is set to 'HorizontalVariable' only the synchronized height will be used. Likewise, if it is set to 'VerticalVaraible' only
            the synchronized width will be used.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.ExplicitLayoutTileSizeBehavior">
            <summary>
            Gets/sets whether tile heights are synchronized across columns and whether tile widths are synchronized across rows when <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrder"/> is set to 'UseExplicitRowColumnOnTile'
            </summary>
            <remarks>
            <para class="body">
            If there are ColumnsSpan values specified &gt; 1 on one or more tiles then all tiles in intersecting columns will behave as if this setting was 'SynchronizeTileWidthsAndHeights' with respect to all other tiles in those intersecting columns.</para>
            <para class="body">
            Likewise, if there are RowSpan values specified &gt; 1 on one or more tiles then all tiles in intersecting rows will behave as if this setting was 'SynchronizeTileWidthsAndHeights' with respect to all other tiles in those intersecting rows.</para>
            <para class="note"><b>Note:</b> regardless of the value of this setting if the overall size is constrained (e.g. if the HorizontalTileAreaAlignment and/or VerticalTileAreaAlignment is set to 'Stretch') 
            then resizing a tile's width may indirectly affect the width of all tiles and resizing its height may indirectly affect the height of all tiles respectively.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrder"/>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.ExplicitLayoutTileSizeBehaviorProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.HorizontalTileAreaAlignment">
            <summary>
            Determines the horizontal alignment of the complete block of visible tiles within the control.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> For <see cref="T:Infragistics.Controls.Layouts.MaximizedModeSettings"/>, this property applies to the minimized tile area only.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.HorizontalTileAreaAlignmentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.MaxColumns">
            <summary>
            Gets/sets the maximum number of columns to use when arranging tiles in 'Normal' mode..
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.MaxColumnsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.MaxRows">
            <summary>
            Gets/sets the maximum number of rows to use when arranging tiles in 'Normal' mode..
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: a value of zero, which is the default, represents unlimited.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.MaxRowsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.MinColumns">
            <summary>
            Gets/sets the minimum number of columns to use when arranging tiles in 'Normal' mode..
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.MinColumnsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.MinRows">
            <summary>
            Gets/sets the minimum number of rows to use when arranging tiles in 'Normal' mode..
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.MinRowsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.ShowAllTiles">
            <summary>
            Gets/sets whether all tiles are arranged in view
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> even if this property is set to true it is still possible that all the tiles don't fit, e.g. if there isn't enough space to satisfy their minimum size constraints. In this case, scrollbars will appear.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.ShowAllTilesProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.ShowAllMinimizedTiles"/>
            <seealso cref="P:Infragistics.Controls.Layouts.NormalModeSettings.TileConstraints"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.TileConstraints">
            <summary>
            Gets/sets the constraints use for sizing a tile when it's <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Normal'
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.TileConstraintsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrder">
            <summary>
            Gets/sets how the panel will layout the tiles.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.TileLayoutOrderProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.NormalModeSettings.VerticalTileAreaAlignment">
            <summary>
            Determines the vertical alignment of the complete block of visible tiles within the control.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> For <see cref="T:Infragistics.Controls.Layouts.MaximizedModeSettings"/>, this property applies to the minimized tile area only.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.NormalModeSettings.VerticalTileAreaAlignmentProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo">
            <summary>
            An object used to serialize the state of a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo.IsExplicitLayout">
            <summary>
            Serializes whether an explicit layout is being used
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo.Items">
            <summary>
            Represents the collections of items in the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo.MinimizedAreaExtentX">
            <summary>
            Serializes the minimized area extent in the X dimension if it was resized explicitly by the user when the maximized area was on the left or right.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo.MinimizedAreaExtentY">
            <summary>
            Serializes the minimized area extent in the Y dimension if it was resized explicitly by the user when the maximized area was on the top or bottom.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo.SynchoronizedTileHeight">
            <summary>
            Serializes the synchronized height of all tiles after the user resized a tile and <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing"/> was set to 'Synchronized'.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.XamTileManagerPersistenceInfo.SynchoronizedTileWidth">
            <summary>
            Serializes the synchronized width of all tiles after the user resized a tile and <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing"/> was set to 'Synchronized'.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo">
            <summary>
            An object used to serialize the state of an item in a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.Column">
            <summary>
            Serializes the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> column number if this is an explicit layout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.ColumnSpan">
            <summary>
            Serializes the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> column span if this is an explicit layout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.ColumnWeight">
            <summary>
            Serializes the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> column weight if this is an explicit layout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.IsClosed">
            <summary>
            Serializes whether the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is closed
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.IsExpandedWhenMinimized">
            <summary>
            Serializes whether the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is expanded when it is minimized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.IsMaximized">
            <summary>
            Serializes whether the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is maximized
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.LogicalIndex">
            <summary>
            Serializes the logical index of the item.
            </summary>
            <remarks><para class="note"><b>Note:</b> this can be different than the index in the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>'s <see cref="P:Infragistics.Controls.Layouts.XamTileManager.Items"/> collection if the item was swapped with another item by a user drag operation.</para></remarks>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.MaximizedIndex">
            <summary>
            Serializes the index of the item in the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>'s <see cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/> collection.
            </summary>
            <value>The index of the item in the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/> collection if the item was maximized. Otherwise -1.</value>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.PreferredHeightOverride">
            <summary>
            Serializes the preferred height override of the item. This could have resulted from a user resize operation if the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing"/> was set to 'Individual'.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.PreferredWidthOverride">
            <summary>
            Serializes the preferred width override of the item. This could have resulted from a user resize operation if the <see cref="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing"/> was set to 'Individual'.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.Row">
            <summary>
            Serializes the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> Row number if this is an explicit layout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.RowSpan">
            <summary>
            Serializes the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> Row span if this is an explicit layout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.RowWeight">
            <summary>
            Serializes the item's associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/> Row weight if this is an explicit layout.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileItemPersistenceInfo.SerializationId">
            <summary>
            Serializes a string identifier that is used to match up the item during de-serialization.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.IResizableElement">
            <summary>
            This interface must be implemented by a FrameworkElement that wants to be resized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.IResizableElement.ResizeContext">
            <summary>
            Gets the context that is important to the object that implements IResizeHost
            </summary>
        </member>
        <member name="T:Infragistics.Controls.IResizeHost">
            <summary>
            Interface implemented by an element that contains resizable items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.AddResizerBar(System.Windows.FrameworkElement)">
            <summary>
            Called at the start of a resize operation to add the resizer bar to the parent tree
            </summary>
            <param name="resizerBar">The resizer bar to add</param>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.CanCaptureMouse(System.Windows.Input.MouseButtonEventArgs,System.Windows.FrameworkElement,System.Nullable{System.Boolean})">
            <summary>
            Determines if the control is in a state to allow mouse capture.
            </summary>
            <returns>True if the mouse can be captured at this time</returns>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.CanResize(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Determines if the resizing is allowed.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <param name="resizeInXAxis">True to resize the width and false to resize the height.</param>
            <returns>True if resizing in this dimension is allowed.</returns>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.GetResizeAreaForItem(System.Windows.FrameworkElement)">
            <summary>
            Gets an element that defines the resize area for an item.
            </summary>
            <param name="resizableItem">The item to be resized.</param>
            <returns>The resize are.</returns>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.RemoveResizerBar(System.Windows.FrameworkElement)">
            <summary>
            Called at the end of a resize operation to remove the resizer bar from the parent tree
            </summary>
            <param name="resizerBar">The resizer bar to remove</param>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.Resize(System.Windows.FrameworkElement,System.Boolean,System.Double)">
            <summary>
            Resizes the item.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <param name="resizeInXAxis">True to resize the width and false to resize the height.</param>
            <param name="delta">The resize delta in device-independent units (1/96th inch per unit).</param>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.GetResizeCursor(System.Windows.FrameworkElement,System.Boolean,System.Windows.Input.Cursor)">
            <summary>
            Gets the cursor to use while the mouse is over a resizable border.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <param name="resizeInXAxis">True to resize the width and false to resize the height.</param>
            <param name="cursor">The normal default cursor for this type of a resize operation.</param>
            <returns>The cursor to display while the mouse is over the resize border.</returns>
        </member>
        <member name="M:Infragistics.Controls.IResizeHost.InitializeResizeConstraints(System.Windows.FrameworkElement,System.Windows.FrameworkElement,Infragistics.Controls.ResizeConstraints)">
            <summary>
            Called before a resize operation begins. 
            </summary>
            <param name="resizeArea">The element that defines the resize area.</param>
            <param name="resizableItem">The item to be resized</param>
            <param name="constraints">The constarints to apply to the resize operation.</param>
        </member>
        <member name="P:Infragistics.Controls.IResizeHost.Controller">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.ResizeController"/> (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.IResizeHost.RootElement">
            <summary>
            Returns the root element which normally is the control itself (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.IResizeHostMulti">
            <summary>
            Interface implemented by an element that contains resizable items that may support sizing of their contents in both dimensions at the same time.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.IResizeHostMulti.CanResizeInBothDimensions(System.Windows.FrameworkElement)">
            <summary>
            Determines if the resizing is allowed in both dimensions at the same time.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <returns>True if resizing in both dimensions is allowed.</returns>
        </member>
        <member name="M:Infragistics.Controls.IResizeHostMulti.GetMultiResizeCursor(System.Windows.FrameworkElement,System.Windows.Input.Cursor)">
            <summary>
            Gets the cursor to use while the mouse is over the resize corner.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <param name="cursor">The normal default cursor for this type of a resize operation.</param>
            <returns>The cursor to display while the mouse is over the resize corner.</returns>
        </member>
        <member name="M:Infragistics.Controls.IResizeHostMulti.ResizeBothDimensions(System.Windows.FrameworkElement,System.Double,System.Double)">
            <summary>
            Resizes the item in both dimensions.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <param name="deltaX">The resize delta in the x dimension in device-independent units (1/96th inch per unit).</param>
            <param name="deltaY">The resize delta in the x dimension in device-independent units (1/96th inch per unit).</param>
        </member>
        <member name="T:Infragistics.Controls.IAutoResizeHost">
            <summary>
            Interface implemented by an element that contains resizable items that may support sizing to their contents.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.IAutoResizeHost.PerformAutoSize(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Invoked to resizes the specified item based on the size of its contents.
            </summary>
            <param name="resizableItem">The item that contains the ResizeContext</param>
            <param name="resizeInXAxis">True to resize the width and false to resize the height.</param>
            <returns>Returns true if the auto size was performed; otherwise false is returned.</returns>
        </member>
        <member name="T:Infragistics.Controls.ResizeConstraints">
            <summary>
            An object that contains the constraints used during a resize operation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.ResizeConstraints.#ctor(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.ResizeConstraints"/> class
            </summary>
            <param name="resizerBar">The resizer bar</param>
            <param name="resizeArea">The resize area</param>
            <param name="resizeInXAxis">True if the element is being resized along the x-axis; otherwise false if the element is being resized along the y-axis.</param>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.Cancel">
            <summary>
            If set to true will _cancel the operation
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.MinExtent">
            <summary>
            The minimum extent allowed in device-independent units (1/96th inch per unit)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.MaxExtent">
            <summary>
            The maximum extent allowed in device-independent units (1/96th inch per unit)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.ResizeWhileDragging">
            <summary>
            If set to true will cause resizing while the mouse is being dragged
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.ResizerBar">
            <summary>
            The resizer bar indicator (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.ResizeArea">
            <summary>
            The resize area (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeConstraints.ResizeInXAxis">
            <summary>
            Indicates whether the element is being resized along the x or y axis (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.ResizeController">
            <summary>
            Controller object used for element resizing operations
            </summary>
        </member>
        <member name="M:Infragistics.Controls.ResizeController.#ctor(Infragistics.Controls.IResizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.ResizeController"/> class
            </summary>
            <param name="host">The resize host</param>
            <seealso cref="T:Infragistics.Controls.IResizeHost"/>
        </member>
        <member name="M:Infragistics.Controls.ResizeController.CancelResize">
            <summary>
            Cancel any pending resize operations
            </summary>
        </member>
        <member name="M:Infragistics.Controls.ResizeController.PositionResizerBar">
            <summary>
            Called during arrange pass to position the resizer bar
            </summary>
        </member>
        <member name="M:Infragistics.Controls.ResizeController.ResumeMouseMoveProcessing">
            <summary>
            Resumes processing the logic in response to mouse moves
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> calls to <b>SuspendMouseMoveProcessing</b> must be paired with corresponding calls to <b>ResumeMouseMoveProcessing</b>.</para>
            </remarks>
            <returns>The number of times the <b>SuspendMouseMoveProcessing</b>method was called without corresponding calls to this method.</returns>
            <seealso cref="M:Infragistics.Controls.ResizeController.ResumeMouseMoveProcessing"/>
        </member>
        <member name="M:Infragistics.Controls.ResizeController.SuspendMouseMoveProcessing">
            <summary>
            Suspends processing the logic in response to mouse moves
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> calls to <b>SuspendMouseMoveProcessing</b> must be paired with corresponding calls to <b>ResumeMouseMoveProcessing</b>.</para>
            </remarks>
            <returns>The number of times this method was called without corresponding calls to <see cref="M:Infragistics.Controls.ResizeController.ResumeMouseMoveProcessing"/>.</returns>
            <seealso cref="M:Infragistics.Controls.ResizeController.ResumeMouseMoveProcessing"/>
        </member>
        <member name="P:Infragistics.Controls.ResizeController.Host">
            <summary>
            Returns the associated <see cref="T:Infragistics.Controls.IResizeHost"/> (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeController.InterItemSpacingX">
            <summary>
            Gets/sets how much empty space is between resizable elements in the X dimension.  
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this space added to the resize area.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.ResizeController.InterItemSpacingY">
            <summary>
            Gets/sets how much empty space is between resizable elements in the Y dimension.  
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this space is added to the resize area.</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.ResizeController.IsResizing">
            <summary>
            Returns true during a resize operation (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.ResizeController.ResizerBar">
            <summary>
            The resizer bar (read-only)
            </summary>
            <remarks>May return null is not resizing or if the resize constraints specify ResizeWhileDragging</remarks>
        </member>
        <member name="P:Infragistics.Controls.ResizeController.ResizerBarWidth">
            <summary>
            Gets/sets the width of the resizer bar
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileCommand">
            <summary>
            Class for all commands that deal with a <see cref="T:Infragistics.Controls.Layouts.XamTile"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileCommand.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the object can support this command.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileCommand.Execute(System.Object)">
            <summary>
            Executes the command 
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Layouts.XamTile"/> object that will be executed against.</param>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Layouts.Primitives.TileCommand"/> object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileCommandSource.ResolveCommand">
            <summary>
            Generates the <see cref="T:System.Windows.Input.ICommand"/> object that will execute the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileCommandSource.CommandType">
            <summary>
            Gets or sets the TileCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.ITileConstraints">
            <summary>
            Returns constraint information for tiles
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.HorizontalAlignment">
            <summary>
            Gets the horizontal alignment of the tile within its allocated slot (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.Margin">
            <summary>
            Gets the margin used around a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.MaxHeight">
            <summary>
            Gets the maximum height of a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.MaxWidth">
            <summary>
            Gets the maximum width of a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.MinHeight">
            <summary>
            Gets the minimum height of a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.MinWidth">
            <summary>
            Gets the minimum width of a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.PreferredHeight">
            <summary>
            Gets the preferred height of a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.PreferredWidth">
            <summary>
            Gets the preferred width of a tile (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.ITileConstraints.VerticalAlignment">
            <summary>
            Gets the vertical alignment of the tile within its allocated slot (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileConstraints">
            <summary>
            Contains minimum, maximum and preferred size settings for a tile.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.HorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.HorizontalAlignment"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.MarginProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.Margin"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.MaxHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.MaxHeight"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.MaxWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.MaxWidth"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.MinHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.MinHeight"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.MinWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.MinWidth"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.PreferredHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.PreferredHeight"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.PreferredWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.PreferredWidth"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileConstraints.VerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.TileConstraints.VerticalAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.HorizontalAlignment">
            <summary>
            Gets/sets the horizontal alignment of the tile within its allocated slot.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.HorizontalAlignmentProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.Margin">
            <summary>
            Gets/sets the margin used around a tile
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.MarginProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.MaxHeight">
            <summary>
            Gets/sets the maximum height of a tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.MaxHeightProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.MaxWidth">
            <summary>
            Gets/sets the maximum width of a tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.MaxWidthProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.MinHeight">
            <summary>
            Gets/sets the minimum height of a tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.MinHeightProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.MinWidth">
            <summary>
            Gets/sets the minimum width of a tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.MinWidthProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.PreferredHeight">
            <summary>
            Gets/sets the preferred height of a tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.PreferredHeightProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.PreferredWidth">
            <summary>
            Gets/sets the preferred width of a tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.PreferredWidthProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileConstraints.VerticalAlignment">
            <summary>
            Gets/sets the vertical alignment of the tile within its allocated slot.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.TileConstraints.VerticalAlignmentProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.GetItemInfo(System.Object)">
            <summary>
            Retuns the <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> associated with a specific item
            </summary>
            <param name="item">The item</param>
            <returns>An <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> object</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.GetItemInfo(System.Object,System.Boolean,System.Int32)">
            <summary>
            Retuns the <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> associated with a specific item
            </summary>
            <param name="item">The item</param>
            <param name="createIfNotFound">True to create an ItemTileInfo if one doesn't exist.</param>
            <param name="originalItemIndex">The index of the item in the items collection or -1.</param>
            <returns>An <see cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/> object</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.SortItems(System.Collections.Generic.IComparer{Infragistics.Controls.Layouts.ItemTileInfo})">
            <summary>
            Sorts the items (adjusts their logical index)
            </summary>
            <param name="comparer">The comparer to use</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.CreateItemInfo(System.Object,System.Int32)">
            <summary>
            Factory method to return a new instance of a ItemTileInfo derived class to represent an item.
            </summary>
            <param name="item">The item to represent</param>
            <param name="index">The index of the item in the items collection.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.InitializePanel(Infragistics.Controls.Layouts.Primitives.TileAreaPanel)">
            <summary>
            For internal use only
            </summary>
            <param name="panel"></param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.LayoutItem.CreateInstanceOfRecyclingElement">
            <summary>
            Creates a new instance of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that represents the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.LayoutItem.OnElementAttached(Infragistics.Controls.Layouts.XamTile)">
            <summary>
            Invoked when a XamTile is being attached to an item.
            </summary>
            <param name="tile">The tile being attached</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.LayoutItem.OnElementReleased(Infragistics.Controls.Layouts.XamTile)">
            <summary>
            Invoked when a XamTile is being released.
            </summary>
            <param name="tile">The released tile.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileLayoutManager.LayoutItem.OnElementReleasing(Infragistics.Controls.Layouts.XamTile)">
            <summary>
            Invoked when a XamTile is about to be released.
            </summary>
            <param name="tile">The tile being released</param>
            <returns>False, if the tile shouldn't be released.</returns>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileLayoutManager.LayoutItem.RecyclingElementType">
            <summary>
            Returns the type of the recycling element, in this case <see cref="T:Infragistics.Controls.Layouts.XamTile"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileManagerResourceString">
            <summary>
            Class that represents a string resource loaded from the XamTileManager assembly
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter">
            <summary>
            A splitter used between maximized and minimized tile areas in a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.TileAreaSplitterAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved.
            </summary>
            <param name="e">arguments</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.IsDraggingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.IsDragging"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OrientationProperty">
            <summary>
            Identifies the Orientation attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.GetOrientation(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.SetOrientation(System.Windows.DependencyObject,System.Windows.Controls.Orientation)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.GetOrientation(System.Windows.DependencyObject)">
            <summary>
            Gets the orientation of the splitter bar.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OrientationProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.SetOrientation(System.Windows.DependencyObject,System.Windows.Controls.Orientation)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.SetOrientation(System.Windows.DependencyObject,System.Windows.Controls.Orientation)">
            <summary>
            Sets the orientation of the splitter bar..
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OrientationProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.GetOrientation(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.PreviewStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.PreviewStyle"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.ShowsPreviewProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.ShowsPreview"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.ProcessDelta(System.Double,System.Boolean)">
            <summary>
            Used to have the derived splitter class perform the resize operation.
            </summary>
            <param name="delta">The offset</param>
            <param name="isComplete">True if the delta change is invoked because the drag is complete</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.OnIsDraggingChanged">
            <summary>
            Invoked when the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging"/> property has been changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.LogicalChildren">
            <summary>
            Returns an enumerator of the logical children
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.IsDragging">
            <summary>
            Returns or sets
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.IsDraggingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.PreviewStyle">
            <summary>
            Returns or sets <see cref="T:System.Windows.Style"/> for the <see cref="T:System.Windows.Controls.Control"/> instance that is used during a drag operation to represent the preview of where the splitter will be positioned.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.PreviewStyleProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.HorizontalSplitterCursor">
            <summary>
            Returns the default cursor for a horizontal pane splitter
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.ShowsPreview">
            <summary>
            Returns/sets a boolean indicating whether a preview is shown while the splitter is dragged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.ShowsPreviewProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaSplitter.VerticalSplitterCursor">
            <summary>
            Returns the default cursor for a vertical pane splitter
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter">
            <summary>
            An element used to represent the caption/header area of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse capture is lost
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled Mouse.MouseEnter attached event is raised on this element
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled Mouse.MouseLeave attached event is raised on this element
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left button is pressed down.
            </summary>
            <param name="e">arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left button is released.
            </summary>
            <param name="e">arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the is moved.
            </summary>
            <param name="e">arguments</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.TileProperty">
            <summary>
            Identifies the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.Tile">
            <summary>
            Gets/sets the associated tile that the header represents.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this property needs to be set inside the template of the Tile.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.Primitives.TileHeaderPresenter.TileProperty"/>
        </member>
        <member name="T:Infragistics.Controls.Layouts.AllowTileDragging">
            <summary>
            Determines whether tiles can be dragged from one location to another.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.AllowTileDragging.No">
            <summary>
            Tiles can not be dragged from one location to another
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.AllowTileDragging.Swap">
            <summary>
            A tile can be dragged to a new location. The Tile is repositioned when the drop occurs at which time its swaps its location with the Tile being dropped upon. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.AllowTileDragging.Slide">
            <summary>
            A tile can be dragged to a new location. During the drag operation other tiles are dynamically animated over to make room for the Tile being dragged.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.AllowTileSizing">
            <summary>
            Determines whether tiles can be resized.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> the 'Synchronized' setting (the default) is ignored in maximized mode or if <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is set to 'UseExplicitRowColumnOnTile'. 
            Also, if TileLayoutOrder is set to 'HorizontalVariable' only the synchronized height will be used. Likewise, if it is set to 'VerticalVaraible' only
            the synchronized width will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.NormalModeSettings.AllowTileSizing"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.AllowTileSizing.Synchronized">
            <summary>
            When one tile is resized, all tiles are resized to that same size. This is the default setting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.AllowTileSizing.Individual">
            <summary>
            Tiles can be resized independently of one another
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.AllowTileSizing.No">
            <summary>
            Tiles can not be resized.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.ExplicitLayoutTileSizeBehavior">
            <summary>
            Determines whether tile heights are synchronized across columns and whether tile widths are synchronized across rows when <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is set to 'UseExplicitRowColumnOnTile'
            </summary>
            <remarks>
            <para class="body">
            If there are ColumnsSpan values specified &gt; 1 on one or more tiles then all tiles in intersecting columns will behave as if this setting was 'SynchronizeTileWidthsAndHeights' with respect to all other tiles in those intersecting columns.</para>
            <para class="body">
            Likewise, if there are RowSpan values specified &gt; 1 on one or more tiles then all tiles in intersecting rows will behave as if this setting was 'SynchronizeTileWidthsAndHeights' with respect to all other tiles in those intersecting rows.</para>
            <para class="note"><b>Note:</b> regardless of the value of this setting if the overall size is constrained (e.g. if the HorizontalTileAreaAlignment and/or VerticalTileAreaAlignment is set to 'Stretch') 
            then resizing a tile's width may indirectly affect the width of all tiles and resizing its height may indirectly affect the height of all tiles respectively.
            </para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ExplicitLayoutTileSizeBehavior.SynchronizeTileWidthsAndHeights">
            <summary>
            Tile heights and widths are synchronized across all row and columns in the layout. 
            For example, resizing a tile's height in one column will affect the height of tiles in all columns that intersect with the resized tile's row. 
            Likewise, resizing its width will affect the width of tiles in all rows that intersect with the resized tile's column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ExplicitLayoutTileSizeBehavior.SynchronizeTileWidthsAcrossRows">
            <summary>
            Tile widths are synchronized across all rows in the layout. 
            For example, resizing a tile's width in one row will affect the width of tiles in all rows that intersect with the resized tile's column. 
            However, resizing its height will affect only that tile unless column spans > 1 are specified that intersect with the tile's column.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ExplicitLayoutTileSizeBehavior.SynchronizeTileHeightsAcrossColumns">
            <summary>
            Tile heights are synchronized across all columns in the layout. 
            For example, resizing a tile's height in one column will affect the height of tiles in all columns that intersect with the resized tile's row. 
            However, resizing its width will affect only that tile unless row spans > 1 are specified that intersect with the tile's row.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder">
            <summary>
            Determines how the maximized tiles will be arranged.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder.VerticalWithLastTileFill">
            <summary>
            Arrange maximized tiles one after another from top to bottom to fill all available space then move to the next column in a snaking fashion. If the resulting number of rows times columns doesn't exactly match the number of maximized tiles then the last tile will span any remaining rows in order to fill up all the avaialble space in the maximized area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder.Vertical">
            <summary>
            Arrange maximized tiles one after another from top to bottom to fill all available space then move to the next column in a snaking fashion.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder.HorizontalWithLastTileFill">
            <summary>
            Arrange maximized tiles one after another from left to right to fill all available columns then move to the next row below in a snaking fashion. If the resulting number of rows times columns doesn't exactly match the number of maximized tiles then the last tile will span any remaining columns in order to fill up all the avaialble space in the maximized area.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder.Horizontal">
            <summary>
            Arrange maximized tiles one after another from left to right to fill all available columns then move to the next row below in a snaking fashion.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder.SingleColumn">
            <summary>
            Arrange maximized maxmized tiles vertically, one on top of the other.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLayoutOrder.SingleRow">
            <summary>
            Arrange maximized maxmized tiles horizontally, left to right.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.MaximizedTileLocation">
            <summary>
            Determines where the maximized tile area will be relative to the minimized tile area
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLocation.Left">
            <summary>
            Maximized tiles are arranged on the left therefore minimized tiles are on the right.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLocation.Right">
            <summary>
            Maximized tiles are arranged on the right therefore minimized tiles are on the left.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLocation.Top">
            <summary>
            Maximized tiles are arranged on the top therefore minimized tiles are on the bottom.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MaximizedTileLocation.Bottom">
            <summary>
            Maximized tiles are arranged on the bottom therefore minimized tiles are on the top.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.MinimizedTileExpansionMode">
            <summary>
            Determines how many tiles may be expanded in the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> when they are minimized
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MinimizedTileExpansionMode.AllowOne">
            <summary>
            Only one minimized tile can be expanded at any time (i.e. expanding another tile will restore the existing one's state to 'Minimized').
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MinimizedTileExpansionMode.AllowMultiple">
            <summary>
            Any number of minimized tiles can be expanded (i.e. in the 'MinimizedExpanded' state) and when a tile is initially shown in the minimized tile area its state will be 'Minimized'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.MinimizedTileExpansionMode.AllowMultipleExpandAllInitially">
            <summary>
            Any number of minimized tiles can be expanded (i.e. in the 'MinimizedExpanded' state) and when a tile is initially shown in the minimized tile area its state will be 'MinimizedExpanded'. This is the default setting.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileCommandType">
            <summary>
            Identifies the commands exposed by <see cref="T:Infragistics.Controls.Layouts.XamTile"/> 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCommandType.Close">
            <summary>
            Command used to closes a <see cref="T:Infragistics.Controls.Layouts.XamTile"/>. The source must be a XamTile or within it - or the CommandParameter must be the tile.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCommandType.ToggleMaximized">
            <summary>
            Command used to toggle the <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> to and from 'Maximized'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCommandType.ToggleMinimizedExpansion">
            <summary>
            Command used to toggle the <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> to and from 'MinimizedExpanded'.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileLayoutOrder">
            <summary>
            Determines how the tiles will be laid out in normal mode
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileLayoutOrder.Vertical">
            <summary>
            Position tiles one after another from top to bottom to fill all available space vertically then move to the next column in a snaking fashion to form uniform rows and columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileLayoutOrder.VerticalVariable">
            <summary>
            Position tiles one after another from top to bottom to fill all available space vertically then move to the next column in a snaking fashion supporting variable height tiles so that each column can have a different number of tiles.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileLayoutOrder.Horizontal">
            <summary>
            Position tiles one after another from left to right to fill all available columns then move to the next row in a snaking fashion to form uniform rows and columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileLayoutOrder.HorizontalVariable">
            <summary>
            Position tiles one after another from left to right to fill all available space horizontally then move to the next row in a snaking fashion supporting variable width tiles so that each row can have a different number of tiles.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileLayoutOrder.UseExplicitRowColumnOnTile">
            <summary>
            Position tiles based on their explicit Row, RowSpan, Column, and ColumnSpan settings.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileRetentionMode">
            <summary>
            Determines whether generated tiles that are scrolled out of view will be retained or released.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileRetentionMode.Release">
            <summary>
            Release generated tiles that are no longer in view.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileRetentionMode.Retain">
            <summary>
            Retain generated tiles that are no longer in view.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileState">
            <summary>
            Represents the state of an individual tile
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileState.Normal">
            <summary>
            All tiles will return 'Normal' as long as no tile is in a 'Maximized' state. Conversely if any Tile is 'Maximized' then no Tile with return 'Normal'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileState.Maximized">
            <summary>
            If any tile is in a 'Maximized' state then all other tiles can only be 'Maximized', 'Minimized' or 'MinimizedExpanded'.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileState.Minimized">
            <summary>
            'Minimized' is only returned if there is at least one tile in a 'Maximized' state. A Tile in the 'Minimized' state will usually just display its Header not its Content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileState.MinimizedExpanded">
            <summary>
            'MinimizedExpanded' is only returned if there is at least one tile in a 'Maximized' state. A Tile in the 'MinimizedExpanded' state will usually display its Header and its Content but the Tile will be grouped with all other minimized Tiles, both collapsed and expanded.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileCloseAction">
            <summary>
            Determines what happens when Tiles are closed.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/>
            <seealso cref="T:Infragistics.Controls.Layouts.ItemTileInfo"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetItemInfo(System.Object)"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolved"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCloseAction.Default">
            <summary>
            The default value which resolves to 'DoNothing'
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCloseAction.DoNothing">
            <summary>
            The <see cref="T:Infragistics.Controls.Layouts.XamTile"/> can't be closed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCloseAction.CollapseTile">
            <summary>
            When the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is closed its Visibility will be coerced to 'Collapsed' but the associated item will remain in the Items collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.TileCloseAction.RemoveItem">
            <summary>
            When the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is closed the associated item will be removed from the Items collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.ScrollDirection">
            <summary>
            Determines what direction to scroll
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollDirection.Increment">
            <summary>
            Increment the scroll value
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollDirection.Decrement">
            <summary>
            Decrement the scroll value
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.ScrollSpeed">
            <summary>
            Determines how fast a slection scroll should be
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Slowest">
            <summary>
            Scroll the slowest
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Slower">
            <summary>
            Scroll slower
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Slow">
            <summary>
            Scroll slowly
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Medium">
            <summary>
            Scroll a moderate amount
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Fast">
            <summary>
            Scroll fast
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Faster">
            <summary>
            Scroll faster
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.ScrollSpeed.Fastest">
            <summary>
            Scroll fastest
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.LoadingItemMappingEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.LoadingItemMapping"/>
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.LoadingItemMapping"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.LoadingItemMappingEventArgs.Item">
            <summary>
            Gets/sets the item whose information has just been de-serialized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.LoadingItemMappingEventArgs.SerializationId">
            <summary>
            Represents a string that will be serialized to identify the item. (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.SavingItemMappingEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.SavingItemMapping"/>
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.SavingItemMapping"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.SavingItemMappingEventArgs.Item">
            <summary>
            Returns item whose information is about to be serialized. (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.SavingItemMappingEventArgs.SerializationId">
            <summary>
            Represents a string that will be serialized to identify the item.
            </summary>
            <remarks>
            <p class="body">By default this property is set to the associated <see cref="T:Infragistics.Controls.Layouts.XamTile"/>'s <see cref="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdProperty"/> or
            if that is not specified then the Tile's <see cref="P:System.Windows.FrameworkElement.Name"/>.</p>
            <p class="note"><b>Note:</b> If this property is still null after the event is processed then no information for this item will be serialized.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Layouts.CancelableTileEventArgs">
            <summary>
            Abstract base class for cancelable tile event args
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.CancelableTileEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.CancelableTileEventArgs"/>
            </summary>
            <param name="tile">The affected tile</param>
            <param name="item">The affected item</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.CancelableTileEventArgs.Cancel">
            <summary>
            Gets/sets whether this action should be cancelled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.CancelableTileEventArgs.Item">
            <summary>
            Returns the affected item (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.CancelableTileEventArgs.Tile">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that is affected (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileEventArgs">
            <summary>
            Abstract base class for tile event arguments that are not cancelable
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileEventArgs"/>
            </summary>
            <param name="tile">The affected tile</param>
            <param name="item">The affected item</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileEventArgs.Tile">
            <summary>
            Returns the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that is affected (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileEventArgs.Item">
            <summary>
            Returns the affected item (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileClosingEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileClosing"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileClosingEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileClosingEventArgs"/>
            </summary>
            <param name="tile">The tile that is closing</param>
            <param name="item">The associated item</param>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileClosedEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileClosed"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileClosedEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileClosedEventArgs"/>
            </summary>
            <param name="tile">The tile that was closed</param>
            <param name="item">The associated item</param>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileDraggingEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileDragging"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileDraggingEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileDraggingEventArgs"/>
            </summary>
            <param name="tile">The tile that is about to be dragged</param>
            <param name="item">The associated item</param>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileStateChangingEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanging"/>
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanging"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileStateChangingEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object,Infragistics.Controls.Layouts.TileState)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileStateChangingEventArgs"/>
            </summary>
            <param name="tile">The tile whose state is changing</param>
            <param name="item">The associated item</param>
            <param name="newState">The new state being set.</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileStateChangingEventArgs.NewState">
            <summary>
            The state that the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to be changed to.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileStateChangedEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanged"/>
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileStateChangedEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object,Infragistics.Controls.Layouts.TileState,Infragistics.Controls.Layouts.TileState)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileStateChangedEventArgs"/>
            </summary>
            <param name="tile">The tile whose state was changed.</param>
            <param name="item">The associated item</param>
            <param name="newState">The new state of the tile.</param>
            <param name="oldState">The old state of the tile.</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileStateChangedEventArgs.NewState">
            <summary>
            The new state of the <see cref="T:Infragistics.Controls.Layouts.XamTile"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileStateChangedEventArgs.OldState">
            <summary>
            The old state of the <see cref="T:Infragistics.Controls.Layouts.XamTile"/>.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileSwappingEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapping"/>
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapping"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileSwappingEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object,Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileSwappingEventArgs"/>
            </summary>
            <param name="tile">The tile that is being dragged.</param>
            <param name="item">The item associated with the tile being dragged.</param>
            <param name="targetTile">The tile that is the target of the swap.</param>
            <param name="targetItem">The item associated with the target tile.</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileSwappingEventArgs.SwapIsExpandedWhenMinimized">
            <summary>
            Gets/sets whether the Tile's IsExpandedWhenMinimized setting will be swapped with the TargetTile"s setting.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> when swapping a maximized tile with a minimized tile this property will be defaulted to 'true'. Otherwise, it will be defaulted to 'false'.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimized"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileSwappingEventArgs.TargetItem">
            <summary>
            Returns the associated item of the <see cref="P:Infragistics.Controls.Layouts.TileSwappingEventArgs.TargetTile"/> (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileSwappingEventArgs.TargetTile">
            <summary>
            Returns the target of the swap (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.TileSwappedEventArgs">
            <summary>
            Event arguments for event: <see cref="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapped"/>
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapped"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.TileSwappedEventArgs.#ctor(Infragistics.Controls.Layouts.XamTile,System.Object,Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.TileSwappedEventArgs"/>
            </summary>
            <param name="tile">The tile that was just dropped.</param>
            <param name="item">The item associated with the tile that was just dropped.</param>
            <param name="targetTile">The tile that was the target of the swap.</param>
            <param name="targetItem">The item associated with the target tile.</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileSwappedEventArgs.TargetItem">
            <summary>
            Returns the associated item of the <see cref="P:Infragistics.Controls.Layouts.TileSwappedEventArgs.TargetTile"/> (read-only).
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileSwappedEventArgs.TargetTile">
            <summary>
            Returns the target of the swap (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Primitives.TileAreaPanel">
            <summary>
            A <see cref="T:System.Windows.Controls.Panel"/> used exclusively in the template of a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> to measure and arrange its <see cref="T:Infragistics.Controls.Layouts.XamTile"/> elements.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this panel does not support stand-alone usage. It must be used in the template of a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.#ctor">
            <summary>
            Instantiates a new instance of a <see cref="T:Infragistics.Controls.Layouts.Primitives.TileAreaPanel"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
            <summary>
            Called to create the collection to hold the child elements.
            </summary>
            <param name="logicalParent"></param>
            <returns>An instance of a UIElementCollection</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.GetLayoutClip(System.Windows.Size)">
            <summary>
            Returns a geometry for the clipping mask for the element.
            </summary>
            <param name="layoutSlotSize">The size of the element</param>
            <returns>A geometry to clip that takes into account the TileAreaPadding</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.OnChildDesiredSizeChanged(System.Windows.UIElement)">
            <summary>
            Invoked when the <see cref="P:System.Windows.UIElement.DesiredSize"/> of an element changes.
            </summary>
            <param name="child">The child whose size is being changed.</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.RepositionFactorProperty">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.ResizeFactorProperty">
            <summary>
            For internal use 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Primitives.TileAreaPanel.LogicalOrientation">
            <summary>
            The orientation of the panel
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileUtilities.SystemDoubleClickTime">
            <summary>
            Returns the maximum number of milliseconds allowed between mouse button downs to generate a double click message.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileUtilities.SystemDoubleClickSize">
            <summary>
            Returns the maximum distance the cursor is allowed to travel between mouse button downs to generate a double click message.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.TileUtilities.SystemDragSize">
            <summary>
            Returns the maximum distance the cursor is allowed to travel while the mouse button is down before initiating a drag operation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.XamTile">
            <summary>
            A <see cref="T:System.Windows.Controls.ContentControl"/> derived element that represents a tile inside a <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> even though this class derives from ContentControl it exposes all of the properties and functionality of a HeaderedContentControl. 
            The reason the class doesn't derive from HeaderedContentControl is because the base PrepareItemContainer logic in ItemsControl assumes that 
            the item in the Items collection should be set as its Header, likewise the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"/> property should be set as the 
            HeaderTemplate. For tiles this is not the intent, instead the item should be the Tile's Content and the
            <b>ItemsControl.ItemTemplate</b> property should be used to initialize the ContentTemplate property.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.#ctor">
            <summary>
            Instantiates a new instance of <see cref="T:Infragistics.Controls.Layouts.XamTile"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the content has changed
            </summary>
            <param name="oldContent">the old content</param>
            <param name="newContent">the new content</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Layouts.XamTile"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamTileAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnInitialized(System.EventArgs)">
            <summary>
            Overridden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled Mouse.MouseEnter attached event is raised on this element
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled Mouse.MouseLeave attached event is raised on this element
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.AllowMaximizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.AllowMaximize"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.AllowMaximizeResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.AllowMaximizeResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateMaximizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMaximized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimizedExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimizedExpanded"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ContentVisibilityProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.ContentVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.CloseActionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.CloseActionResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.CloseActionResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityResolvedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.HasImageProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.HasImage"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.HasHeaderProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.HasHeader"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.HeaderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.Header"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.HeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.HeaderTemplate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.ImageProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.Image"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.IsClosedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.IsClosed"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.IsMaximizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.IsMaximized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibilityResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibilityResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.SaveInLayoutProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTile.SaveInLayout"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTile.StateProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.ExecuteCommand(Infragistics.Controls.Layouts.TileCommandType,System.Object,System.Windows.FrameworkElement)">
            <summary>
            Executes the specified <see cref="T:Infragistics.Controls.Layouts.TileCommandType"/>.
            </summary>
            <param name="command">The Command to execute.</param>
            <param name="parameter">An optional parameter.</param>
            <param name="sourceElement">The source of the command</param>
            <returns>True if command was executed, false if canceled.</returns>
            <seealso cref="T:Infragistics.Controls.Layouts.TileCommandType"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Layouts.XamTile.Header"/> property value changes.
            </summary>
            <param name="oldHeader">The old header value</param>
            <param name="newHeader">The new header value</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.LogicalChildren">
            <summary>
            Gets an enumerator that can iterate the logical children of this element.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.AllowMaximize">
            <summary>
            Gets/sets whether this tile can be maximized by the user.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.AllowMaximizeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.AllowMaximizeResolved">
            <summary>
            Returns the resolved value as to whether this tile can be maximized (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.AllowMaximizeProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.MinimizedTileExpansionMode"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.AllowMaximizeResolvedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMaximized">
            <summary>
            Gets/sets the ContentTemplate that will be used when the Tile's State is 'Maximized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateMaximizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimized">
            <summary>
            Gets/sets the ContentTemplate that will be used when the Tile's State is 'Minimized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimizedExpanded">
            <summary>
            Gets/sets the ContentTemplate that will be used when the Tile's State is 'MinimizedExpanded'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimizedExpandedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateResolved">
            <summary>
            Returns the ContentTemplate to use based on the current <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> of the tile
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ContentTemplateResolvedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ContentVisibility">
            <summary>
            Gets the visibility of the content (read-only)
            </summary>
            <value>Returns 'Visible' unless the <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Minimized' and a tempate for this state has not been provided thru the <see cref="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimized"/> property.</value>
            <remarks>
            <para class="note"><b>Note:</b> This property is used for binding to the ContentPesenter's Visibility inside the tile's template.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.ContentTemplateMinimized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimized"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ContentVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.CloseAction">
            <summary>
            Gets/sets what happens when this tile is closed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.CloseActionProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.CloseActionResolved">
            <summary>
            Returns the resolved value as to what happens when this tile is closed (read-only).
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.CloseActionProperty"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.CloseActionResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibility">
            <summary>
            Gets/sets the visibility of the close button in the header area
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolved">
            <summary>
            Determines the visibility of the close button in the TileHeaderPresenter (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibility">
            <summary>
            Gets/sets the visibility of the expand toggle button in the header area
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityResolved"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityResolved">
            <summary>
            Determines the visibility of the expand button in the TileHeaderPresenter (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibilityResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.ExpandButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.HasImage">
            <summary>
            Returns a boolean indicating if the <see cref="P:Infragistics.Controls.Layouts.XamTile.Image"/> property has been set.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.HasImageProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.Image"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.HasHeader">
            <summary>
            Returns a boolean indicating if the <see cref="P:Infragistics.Controls.Layouts.XamTile.Header"/> property has been set.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.HasHeaderProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.Header"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.Header">
            <summary>
            Gets/sets an object that will appear in the header of this tile.
            </summary>
            <value>A header object or the default value of null.</value>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.HeaderProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.HeaderTemplate">
            <summary>
            Gets/sets the template used to display the content of the tile's header.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.HeaderTemplateProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.Image">
            <summary>
            The image used in the tile's header/&gt;.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.ImageProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.HasImage"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.IsClosed">
            <summary>
            Returns or sets whether this tile is closed.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if true then this tile's Visibility will be coerced to 'Collapsed'</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.IsClosedProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/>"/&gt;
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimized">
            <summary>
            Gets/sets whether this tile is expanded when it is minimized
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.IsExpandedWhenMinimizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.IsMaximized">
            <summary>
            Returns or sets whether this tile's <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is maximized.
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.State"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.IsMaximizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibility">
            <summary>
            Gets/sets the visibility of the maximize toggle button in the header area
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibilityResolved">
            <summary>
            Determines the visibility of the maximize button in the TileHeaderPresenter (read-only)
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if <see cref="T:Infragistics.Controls.Layouts.ModeSettingsBase"/>.<see cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit"/> is set to zero then this property will be set to 'Collapsed'. 
            Unless the <see cref="P:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibility"/> is set.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibilityResolvedProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.MaximizeButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.SaveInLayout">
            <summary>
            Returns or sets a boolean indicating if the tile should be included in a saved layout.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.SaveInLayoutProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTile.State">
            <summary>
            Returns the current state of the tile (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTile.StateProperty"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTile.HwndHostTracker.OnHwndHostChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the HwndHost property.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.XamTileManager">
            <summary>
            A control that arranges and displays its child elements as tiles, with native support for scrolling and virtualizing those items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Layouts.XamTileManager"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.AutomationPeers.XamTileManagerAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the element.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnInitialized(System.EventArgs)">
            <summary>
            Overridden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse capture is lost
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left button is released.
            </summary>
            <param name="e">arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse is moved.
            </summary>
            <param name="e">arguments</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnAnimationEnded">
            <summary>
            Occurs when tile animations end
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.AnimationEnded"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnAnimationStarted">
            <summary>
            Occurs when tile animations start
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.AnimationStarted"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnLoadingItemMapping(Infragistics.Controls.Layouts.LoadingItemMappingEventArgs)">
            <summary>
            Occurs during a call to <b>Infrageistics.Persistence.PersistenceManager.Load()</b>.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.LoadingItemMapping"/>
            <seealso cref="T:Infragistics.Controls.Layouts.LoadingItemMappingEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnSavingItemMapping(Infragistics.Controls.Layouts.SavingItemMappingEventArgs)">
            <summary>
            Occurs during a call to <b>Infrageistics.Persistence.PersistenceManager.Save()</b>.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.SavingItemMapping"/>
            <seealso cref="T:Infragistics.Controls.Layouts.SavingItemMappingEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileClosed(Infragistics.Controls.Layouts.TileClosedEventArgs)">
            <summary>
            Occurs after a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> has been closed.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileClosed"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileClosedEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileClosing(Infragistics.Controls.Layouts.TileClosingEventArgs)">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to close.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileClosing"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileClosingEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileDragging(Infragistics.Controls.Layouts.TileDraggingEventArgs)">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to be dragged.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileDragging"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileDraggingEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileStateChanged(Infragistics.Controls.Layouts.TileStateChangedEventArgs)">
            <summary>
            Occurs after the state of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> has changed.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanged"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileStateChangedEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileStateChanging(Infragistics.Controls.Layouts.TileStateChangingEventArgs)">
            <summary>
            Occurs when the state of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to change.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanging"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileStateChangingEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileSwapping(Infragistics.Controls.Layouts.TileSwappingEventArgs)">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is dragged over another tile that is a potential swap target.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapping"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileSwappingEventArgs"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnTileSwapped(Infragistics.Controls.Layouts.TileSwappedEventArgs)">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is dropped over another tile and swaps places with it.
            </summary>
            <seealso cref="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapped"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileSwappedEventArgs"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ColumnProperty">
            <summary>
            Identifies the Column attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetColumn(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetColumn(System.Windows.DependencyObject,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetColumn(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Column attached property of the specified element, -1 indicates that the tile will be positioned relative to the previous tile in the panel. The default value is 0.
            </summary>
            <param name="elem">This element's Column value will be returned.</param>
            <returns>The value of the Column attached property. The default value is 0.</returns>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetColumn(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the value of the Column attached property of the specified element, -1 indicates that the tile will be positioned relative to the previous tile in the panel. The default value is 0.
            </summary>
            <param name="elem">This element's Column value will be set.</param>
            <param name="value">Value to set. This can be -1 which will position the element relative to previous element in the panel.</param>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ColumnSpanProperty">
            <summary>
            Identifies the ColumnSpan attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetColumnSpan(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetColumnSpan(System.Windows.DependencyObject,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetColumnSpan(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ColumnSpan attached property of the specified element, 0 indicates
            that the element will occupy the remainder of the space in its logical column. The default is 1. 
            </summary>
            <param name="elem">This element's ColumnSpan value will be returned.</param>
            <returns>The value of the ColumnSpan attached property. The default value is 1.</returns>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetColumnSpan(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the value of the ColumnSpan attached property of the specified element, 0 indicates
            that the element will occupy the remainder of the space in its logical column. The default is 1. 
            </summary>
            <param name="elem">This element's ColumnSpan value will be set.</param>
            <param name="value">Value to set. This can be 0 to indicate that the element should occupy the remainder of the logical column.</param>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ColumnWeightProperty">
            <summary>
            Identifies the ColumnWeight attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetColumnWeight(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetColumnWeight(System.Windows.DependencyObject,System.Single)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetColumnWeight(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the ColumnWeight attached property of the specified element. ColumnWeight specifies
            how any extra width will be distributed among elements.
            </summary>
            <returns>The value of the ColumnWeight attached property. The default value is 0.</returns>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ColumnWeightProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetColumnWeight(System.Windows.DependencyObject,System.Single)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetColumnWeight(System.Windows.DependencyObject,System.Single)">
            <summary>
            Sets the value of the ColumnWeight attached property of the specified element. ColumnWeight specifies
            how any extra width will be distributed among elements.
            </summary>
            <returns>The value of the ColumnWeight attached property.</returns>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ColumnWeightProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetColumnWeight(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsProperty">
            <summary>
            Identifies the Constraints attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraints(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraints(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraints(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the 'Constraints' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Normal'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraints(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraints(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)">
            <summary>
            Sets the value of the 'Constraints' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Normal'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraints(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMaximizedProperty">
            <summary>
            Identifies the ConstraintsMaximized attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMaximized(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMaximized(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMaximized(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the 'ConstraintsMaximized' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Maximized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMaximizedProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMaximized(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMaximized(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)">
            <summary>
            Sets the value of the 'ConstraintsMaximized' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Maximized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMaximizedProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMaximized(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMinimizedProperty">
            <summary>
            Identifies the ConstraintsMinimized attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMinimized(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMinimized(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMinimized(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the 'ConstraintsMinimized' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Minimized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMinimizedProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMinimized(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMinimized(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)">
            <summary>
            Sets the value of the 'ConstraintsMinimized' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Minimized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMinimizedProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMinimized(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMinimizedExpandedProperty">
            <summary>
            Identifies the ConstraintsMinimizedExpanded attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMinimizedExpanded(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMinimizedExpanded(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMinimizedExpanded(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the 'ConstraintsMinimizedExpanded' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'MinimizedExpanded'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMinimizedExpandedProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMinimizedExpanded(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetConstraintsMinimizedExpanded(System.Windows.DependencyObject,Infragistics.Controls.Layouts.TileConstraints)">
            <summary>
            Sets the value of the 'ConstraintsMinimizedExpanded' attached property which contains size constraints for tiles when their <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'MinimizedExpanded'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ConstraintsMinimizedExpandedProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetConstraintsMinimizedExpanded(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.IsDraggingProperty">
            <summary>
            Identifies the IsDragging" attached read-only dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetIsDragging(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetIsDragging(System.Windows.DependencyObject)">
            <summary>
            Returns whether this tile is currently being dragged (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.IsDraggingProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.IsSwapTargetProperty">
            <summary>
            Identifies the read-only IsSwapTarget attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetIsSwapTarget(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetIsSwapTarget(System.Windows.DependencyObject)">
            <summary>
            Returns whether another tile is being dragged over this tile and if released will swap positions with this tile (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.IsSwapTargetProperty"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.RowProperty">
            <summary>
            Identifies the Row attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetRow(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetRow(System.Windows.DependencyObject,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetRow(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the Row attached property of the specified element, -1 indicates that the tile will be positioned relative to the previous tile in the panel. The default value is 0. 
            </summary>
            <param name="elem">This element's Row value will be returned.</param>
            <returns>The value of the Row attached property. The default value is 0.</returns>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetRow(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the value of the Row attached property of the specified element, -1 indicates that the tile will be positioned relative to the previous tile in the panel. The default value is 0.
            </summary>
            <param name="elem">This element's Row value will be set.</param>
            <param name="value">Value to set. This can be -1 which will position the element relative to previous element in the panel.</param>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.RowSpanProperty">
            <summary>
            Identifies the RowSpan attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetRowSpan(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetRowSpan(System.Windows.DependencyObject,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetRowSpan(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the RowSpan attached property of the specified element, 0 indicates
            that the element will occupy the remainder of the space in its logical column. The default is 1. 
            </summary>
            <param name="elem">This element's RowSpan value will be returned.</param>
            <returns>The value of the RowSpan attached property. The default value is 1.</returns>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetRowSpan(System.Windows.DependencyObject,System.Int32)">
            <summary>
            Sets the value of the RowSpan attached property of the specified element, 0 indicates
            that the element will occupy the remainder of the space in its logical column. The default is 1. 
            </summary>
            <param name="elem">This element's RowSpan value will be set.</param>
            <param name="value">Value to set. This can be 0 to indicate that the element should occupy the remainder of the logical row.</param>
            <remarks>
            <para class="note"><b>Note:</b> this property is ignored unless <see cref="T:Infragistics.Controls.Layouts.TileLayoutOrder"/> is 'UseExplicitRowColumnOnTile'.</para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.RowWeightProperty">
            <summary>
            Identifies the RowWeight attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetRowWeight(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetRowWeight(System.Windows.DependencyObject,System.Single)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetRowWeight(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the RowWeight attached property of the specified element. RowWeight specifies
            how any extra height will be distributed among elements.
            </summary>
            <returns>The value of the RowWeight attached property. The default value is 0.</returns>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.RowWeightProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetRowWeight(System.Windows.DependencyObject,System.Single)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetRowWeight(System.Windows.DependencyObject,System.Single)">
            <summary>
            Sets the value of the RowWeight attached property of the specified element. RowWeight specifies
            how any extra height will be distributed among elements.
            </summary>
            <returns>The value of the RowWeight attached property.</returns>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.RowWeightProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetRowWeight(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdProperty">
            <summary>
            Identifies the SerializationId attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetSerializationId(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetSerializationId(System.Windows.DependencyObject,System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetSerializationId(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the 'SerializationId' attached property
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.SetSerializationId(System.Windows.DependencyObject,System.String)"/>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.SetSerializationId(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the value of the 'SerializationId' attached property
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdProperty"/>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.GetSerializationId(System.Windows.DependencyObject)"/>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.HeaderPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.HeaderPath"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileAreaSpacingResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileAreaSpacingResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMaximizedResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMaximizedResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMinimizedResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMinimizedResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMaximizedResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMaximizedResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMinimizedResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMinimizedResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.IsAnimationInProgressProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.IsAnimationInProgress"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedModeProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemContainerStyle"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemHeaderTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemHeaderTemplate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemsSource"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMaximizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMaximized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimizedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimized"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimizedExpandedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimizedExpanded"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.IsTouchSupportEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.IsTouchSupportEnabled"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.MaximizedModeSettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedModeSettings"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimitProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettingsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettings"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.SerializationIdPath"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.TileAreaPaddingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.TileAreaPadding"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.TileCloseActionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Layouts.XamTileManager.TileRetentionModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.TileRetentionMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>
            Adds an additonal Resx file in which the control will pull its resources from.
            </summary>
            <param name="name">The name of the embedded resx file that contains the resources to be used.</param>
            <param name="assembly">The assembly in which the resx file is embedded.</param>
            <remarks>Don't include the extension of the file, but prefix it with the default Namespace of the assembly.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.UnregisterResources(System.String)">
            <summary>
            Removes a previously registered resx file.
            </summary>
            <param name="name">The name of the embedded resx file that was used for registration.</param>
            <remarks>
            Note: this won't have any effect on controls that are already in view and are already displaying strings.
            It will only affect any new controls created.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetInViewRect(Infragistics.Controls.Layouts.XamTile)">
            <summary>
            Returns the area of the specified tile that is in view or will be in view when the current animations end.
            </summary>
            <param name="tile">The tile in question.</param>
            <returns>A rect (in coordinates relative to the tile) that represents the area of the tile that will be in view once all animations have ended. If no part of the tile will be in view then an empty rect is returned.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetItemInfo(System.Object)">
            <summary>
            Gets the associated info for an item.
            </summary>
            <param name="item">The item in question.</param>
            <returns>The associated ItemInfo object that can be used to get/or set certain status information or null if the item doesn't exist in the Items collection.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the item into view
            </summary>
            <param name="item">The item to scroll</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.TileFromItem(System.Object)">
            <summary>
            Gets the associated tile for an item.
            </summary>
            <param name="item">The item in question.</param>
            <returns>The associated Tile or null if the Tile hasn't been generated.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.ClearContainerForItemOverride(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Called to clear a tile that wrapped an item
            </summary>
            <param name="tile">The <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that will contained the item</param>
            <param name="item">The contained item.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.GetContainerForItemOverride">
            <summary>
            Called to create a tile to wrap an item
            </summary>
            <returns>A new <see cref="T:Infragistics.Controls.Layouts.XamTile"/> instance.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the item is its own tile
            </summary>
            <param name="item">The item to check.</param>
            <returns>true if the item is a <see cref="T:Infragistics.Controls.Layouts.XamTile"/>, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the items collection has changed
            </summary>
            <param name="e">The event arguments that contain information about what has changed.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.PrepareContainerForItemOverride(Infragistics.Controls.Layouts.XamTile,System.Object)">
            <summary>
            Called to prepare a tile to wrap an item
            </summary>
            <param name="container">The <see cref="T:Infragistics.Controls.Layouts.XamTile"/> that will contain the item</param>
            <param name="item">The item to be contained.</param>
        </member>
        <member name="M:Infragistics.Controls.Layouts.XamTileManager.Infragistics#Controls#IResizeHost#CanCaptureMouse(System.Windows.Input.MouseButtonEventArgs,System.Windows.FrameworkElement,System.Nullable{System.Boolean})">
            <summary>
            Determines if the control is in a state to allow mouse capture.
            </summary>
            <returns>True if the mouse can be captured at this time</returns>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.LogicalChildren">
            <summary>
            Gets an enumerator that can iterate the logical children of this element.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.AnimationEnded">
            <summary>
            Occurs when tile animations end
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnAnimationEnded"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.AnimationStarted">
            <summary>
            Occurs when tile animations start
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnAnimationStarted"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.LoadingItemMapping">
            <summary>
            Occurs during a call to <b>Infrageistics.Persistence.PersistenceManager.Load()</b>.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnLoadingItemMapping(Infragistics.Controls.Layouts.LoadingItemMappingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.LoadingItemMappingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.SavingItemMapping">
            <summary>
            Occurs during a call to <b>Infrageistics.Persistence.PersistenceManager.Save()</b>.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnSavingItemMapping(Infragistics.Controls.Layouts.SavingItemMappingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.SavingItemMappingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileClosed">
            <summary>
            Occurs after a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> has been closed.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileClosed(Infragistics.Controls.Layouts.TileClosedEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileClosedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileClosing">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to close.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileClosing(Infragistics.Controls.Layouts.TileClosingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileClosingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileDragging">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to be dragged.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileDragging(Infragistics.Controls.Layouts.TileDraggingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileDraggingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanged">
            <summary>
            Occurs after the state of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> has changed.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileStateChanged(Infragistics.Controls.Layouts.TileStateChangedEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileStateChangedEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileStateChanging">
            <summary>
            Occurs when the state of a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is about to change.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileStateChanging(Infragistics.Controls.Layouts.TileStateChangingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileStateChangingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapping">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is dragged over another tile that is a potential swap target.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileSwapping(Infragistics.Controls.Layouts.TileSwappingEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileSwappingEventArgs"/>
        </member>
        <member name="E:Infragistics.Controls.Layouts.XamTileManager.TileSwapped">
            <summary>
            Occurs when a <see cref="T:Infragistics.Controls.Layouts.XamTile"/> is dropped over another tile and swaps places with it.
            </summary>
            <seealso cref="M:Infragistics.Controls.Layouts.XamTileManager.OnTileSwapped(Infragistics.Controls.Layouts.TileSwappedEventArgs)"/>
            <seealso cref="T:Infragistics.Controls.Layouts.TileSwappedEventArgs"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.HeaderPath">
            <summary>
            Gets/sets a path to a value on the source object that will be used to initialize the Header of each <see cref="T:Infragistics.Controls.Layouts.XamTile"/>. 
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this setting is ignored for <see cref="T:Infragistics.Controls.Layouts.XamTile"/>'s that are direct children of the XamTileManager. This setting only has meaning for <see cref="T:Infragistics.Controls.Layouts.XamTile"/>s that get generated as item containers.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.HeaderPathProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileAreaSpacingResolved">
            <summary>
            Returns the resolved value that will be used for spacing between the maximized tile area and the minimized tile area when is maximized mode.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacing"/> property is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMaximizedResolved"/> or <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMaximizedResolved"/> setting will be used. If this also is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> or <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> value will be used based on the <see cref="T:Infragistics.Controls.Layouts.MaximizedTileLocation"/>.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedModeSettings"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileAreaSpacing"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX">
            <summary>
            Gets/sets the amount of spacing between tiles horizontally.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> the default value for this property is 2.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMaximizedResolved">
            <summary>
            Returns the resolved value that will be used for spacing between the maximized tiles horizontally.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximized"/> property is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> value will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingXMinimizedResolved">
            <summary>
            Returns the resolved value that will be used for spacing between the minimized tiles horizontally.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMinimized"/> property is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/> value will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingX"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingXMaximized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY">
            <summary>
            Gets/sets the amount of spacing between tiles vertically.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> the default value for this property is 2.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMaximizedResolved">
            <summary>
            Returns the resolved value that will be used for spacing between the maximized tiles vertically.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximized"/> property is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> value will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingYMinimizedResolved">
            <summary>
            Returns the resolved value that will be used for spacing between the minimized tiles vertically.
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> if the <see cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMinimized"/> property is not set then the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/> value will be used.</para>
            </remarks>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.InterTileSpacingY"/>
            <seealso cref="P:Infragistics.Controls.Layouts.MaximizedModeSettings.InterTileSpacingYMaximized"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.IsAnimationInProgress">
            <summary>
            Returns true if tile animations are in progress (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.IsAnimationInProgressProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode">
            <summary>
            Returns true if there is at least one <see cref="T:Infragistics.Controls.Layouts.XamTile"/> whose <see cref="P:Infragistics.Controls.Layouts.XamTile.State"/> is 'Maximized'. (read-only)
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemContainerStyle">
            <summary>
            Returns or sets the style to use for <see cref="T:Infragistics.Controls.Layouts.XamTile"/> containers that are generated for each item.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemContainerStyleProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemHeaderTemplate">
            <summary>
            Gets/sets the HeaderTemplate that will be set on an item's Tile.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemHeaderTemplateProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.Items">
            <summary>
            Returns the collection of items
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.ItemsSource"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemsSource">
            <summary>
            Returns or sets an enumerable used to populate the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.Items"/> collection
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemsSourceProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplate">
            <summary>
            Returns or sets the data template to use for each item in the <see cref="P:Infragistics.Controls.Layouts.XamTileManager.Items"/> collection.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMaximized">
            <summary>
            Gets/sets the ItemTemplate that will be used when a Tile's State is 'Maximized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMaximizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimized">
            <summary>
            Gets/sets the ItemTemplate that will be used when a Tile's State is 'Minimized'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimizedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimizedExpanded">
            <summary>
            Gets/sets the ItemTemplate that will be used when a Tile's State is 'MinimizedExpanded'.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.ItemTemplateMinimizedExpandedProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.IsTouchSupportEnabled">
            <summary>
            Returns or sets whether touch support is enabled for this control
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.IsTouchSupportEnabledProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedModeSettings">
            <summary>
            Gets/sets the settings that are used to layout Tiles when in maximized mode
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.MaximizedModeSettingsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedItems">
            <summary>
            Returns a read-only collection of the items that are maximized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimit">
            <summary>
            Gets/sets the limit on the number of 'Maximized' tiles that will be allowed.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.MaximizedTileLimitProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettings">
            <summary>
            Gets/sets the settings that are used to layout Tiles when not in maximized mode
            </summary>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTileManager.IsInMaximizedMode"/>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.NormalModeSettingsProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.SerializationIdPath">
            <summary>
            Gets/sets a path to a value on the source object that will be used to initialize the <see cref="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdProperty"/> of each <see cref="T:Infragistics.Controls.Layouts.XamTile"/>. 
            </summary>
            <remarks>
            <para class="note"><b>Note:</b> this setting is ignored for <see cref="T:Infragistics.Controls.Layouts.XamTile"/>'s that are direct children of the XamTileManager. This setting only has meaning for <see cref="T:Infragistics.Controls.Layouts.XamTile"/>s that get generated as item containers.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.SerializationIdPathProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.TileAreaPadding">
            <summary>
            Get/sets that amount of space between the XamTileManager and the area where the tiles are arranged.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.TileAreaPaddingProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.TileCloseAction">
            <summary>
            Gets/sets whether Tiles can be closed by the user.
            </summary>
            <remarks>
            <para class="note"><b>Note</b>: if TileCloseAction is set to 'DoNothing' (its default value) then, by default, <see cref="T:Infragistics.Controls.Layouts.XamTile"/>s can't be closed. 
            However, this behavior can be overridden for individual tiles by setting their <see cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/> property.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.TileCloseActionProperty"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseAction"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibility"/>
            <seealso cref="P:Infragistics.Controls.Layouts.XamTile.CloseButtonVisibilityResolved"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.TileRetentionMode">
            <summary>
            Gets/sets whether generated tiles that are scrolled out of view will be retained or released.
            </summary>
            <seealso cref="F:Infragistics.Controls.Layouts.XamTileManager.TileRetentionModeProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Layouts.XamTileManager.PropChangeListeners">
            <summary>
            Gets collection of property change listeners.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Layouts.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Layouts.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
